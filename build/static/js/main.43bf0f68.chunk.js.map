{"version":3,"sources":["resources/list.svg","redux/alertReducer.js","redux/shopListReducer.js","redux/store.js","Ingredient/queries.js","Food/queries.js","FoodPack/queries.js","hooks/useUpdateCache.js","hooks/useEpicSubscription.js","Menu/presentational/DrawerToggleButton.js","Menu/presentational/Toolbar.js","general/ThemeButton.js","Menu/presentational/Description.js","hooks/useUpdateStore.js","ShopList/ShopListButton.js","Food/presentational/ListFoods.js","Food/containers/ListFoodsContainer.js","Ingredient/presentational/ListIngredients.js","Ingredient/containers/ListIngredientsContainer.js","general/DeleteModal.js","Ingredient/utils/DeleteModalBody.js","Ingredient/utils/DeleteIngredientButton.js","Ingredient/presentational/Ingredient.js","Ingredient/containers/IngredientContainer.js","Food/utils/DeleteModalBody.js","Food/utils/DeleteFoodButton.js","Food/utils/UpdateFoodButton.js","Food/presentational/Food.js","Food/containers/FoodContainer.js","FoodPack/presentational/ListFoodPacks.js","FoodPack/containers/ListFoodPacksContainer.js","FoodPack/utils/DeleteFoodPackButton.js","FoodPack/utils/UpdateFoodPackButton.js","FoodPack/presentational/FoodPack.js","FoodPack/containers/FoodPackContainer.js","hooks/useField.js","Ingredient/Forms/IngredientForm.js","Food/presentational/FoodForm.js","hooks/useMacros.js","Food/containers/FoodFormContainer.js","Food/containers/UpdateFood.js","Food/containers/NewFood.js","FoodPack/presentational/FoodPackForm.js","FoodPack/containers/FoodPackFormContainer.js","FoodPack/containers/NewFoodPack.js","FoodPack/containers/UpdateFoodPack.js","ShopList/EmptyShopListButton.js","Ingredient/presentational/ShopListCard.js","Food/presentational/ShopListCard.js","FoodPack/presentational/ShopListCard.js","ShopList/presentational/Overview.js","ShopList/presentational/ShopList.js","ShopList/containers/ShopListContainer.js","Ingredient/containers/UpdateIngredient.js","Menu/presentational/Routes.js","general/GlobalAlert.js","Menu/presentational/SideDrawer.js","Menu/presentational/BackDrop.js","App.js","index.js"],"names":["module","exports","setAlert","header","body","dispatch","id","uuid","type","data","setTimeout","clearAlert","alertReducer","state","action","concat","filter","alert","addItem","objectForStore","shopListIds","objectId","set","shopListReducer","foodPacks","foods","ingredients","shopListIdsClone","forEach","map","slid","includes","some","count","push","object","find","o","setClone","clone","reducer","combineReducers","alerts","shopList","store","createStore","composeWithDevTools","applyMiddleware","thunk","INGREDIENT_DETAILS","gql","INGREDIENT_DETAILS_WITH_REF","ALL_INGREDIENTS","ADD_INGREDIENT","INGREDIENT_ADDED","DELETE_INGREDIENT","UPDATE_INGREDIENT","FOOD_DETAILS","FOOD_DETAILS_WITH_REF","ALL_FOODS","ADD_FOOD","FOOD_ADDED","DELETE_FOOD","UPDATE_FOOD","FOODPACK_DETAILS","ALL_FOODPACKS","ADD_FOODPACK","DELETE_FOODPACK","UPDATE_FOODPACK","useUpdateCache","collection","query","mode","client","useApolloClient","includedIn","i","oldRefs","dataInStore","readQuery","writeQuery","length","allIngredients","ingredientsInFood","item","ingredientsData","usedInFoods","allFoods","foodsInFoodPack","f","foodsData","usedInFoodPacks","fi","allFoodPacks","fp","foodPackData","newRefs","refQuery","refCollection","usedInObjects","isEqual","setWithUniqueValues","Set","refsFromDB","uniqueRefObjectFromCache","r","has","refObject","useEpicSubscription","updateCacheWithIngredient","useSubscription","onSubscriptionData","addedIngredient","subscriptionData","ingredientAdded","updateCacheWithFood","addedFood","foodAdded","DrawerToggleButton","drawerClickHandler","className","onClick","Toolbar","history","useHistory","to","onKeyPress","role","tabIndex","src","list","alt","width","ThemeButton","text","onKeyDown","Description","console","log","useUpdateStore","useState","initDone","setInitDone","useDispatch","currentShopList","Cookies","get","JSON","parse","stringify","filteredShopList","removeItem","remove","connect","ownProps","storeSet","props","setInFinnish","show","setShow","updateStore","foundInShopList","variant","style","display","Button","Modal","onHide","Header","closeButton","Body","Footer","ListFoods","Container","Row","Card","margin","key","Title","name","ListFoodsContainer","foodsResult","useQuery","loading","paddingLeft","ListIngredients","priceRange","min","toFixed","max","kcal","total","ListIngredientsContainer","ingredientsResult","DeleteModal","React","forwardRef","ref","hideModal","setModalVisible","useImperativeHandle","size","centered","animation","Dialog","children","handleClick","buttonLabel","DeleteModalBody","ingredient","updateCacheWith","useMutation","update","response","deleteIngredient","modalVisible","deleteIngrRef","createRef","a","current","variables","message","StyledTh","styled","th","macroDetails","title","unit","Ingredient","macros","m","details","brand","weight","pieces","in100g","inOnePiece","IngredientContainer","ingredientName","useRouteMatch","params","food","alreadyDeleted","setAlreadyDeleted","deleteFood","deleteFoodRef","UpdateFoodButton","Food","padding","price","hideButtons","recipe","step","FoodContainer","foodName","ListFoodPacks","ListFoodPacksContainer","foodPacksResult","foodPack","deleteFoodPack","window","confirm","UpdateFoodPackButton","FoodPack","FoodPackContainer","foodPackName","useField","setState","value","setValue","onChange","e","target","prices","setPrices","newPrice","setNewPrice","fat","saturatedFat","carbs","sugars","protein","salt","addIngredient","ingredientNames","submit","preventDefault","ingredientForMutation","Number","Form","onSubmit","Group","Label","Control","pricesClone","pop","p","bsPrefix","event","FoodForm","toggleUnit","changeFoodIngredientValue","foodIngredients","handleSelect","removeFoodIngredient","addStep","removeStep","ListGroup","row","Item","DropdownButton","Dropdown","eventKey","onSelect","Table","onlyGrams","disabled","macroName","KCAL","FAT","SATURATED_FAT","CARBS","SUGARS","PROTEIN","SALT","getMacroByUnit","macro","foodIngredientValue","foodIngredientUnit","getMacroForFood","reduce","macroSum","nextFoodIngr","amount","grams","useMacros","setKcal","setFat","setSaturatedFat","setCarbs","setSugars","setProtein","setSalt","underZeroIsZero","num","addTo","subtractFrom","addAll","Object","keys","amountToAdd","subtractAll","amountToSubtract","updateFood","addFood","resetStep","setRecipe","getFoodIngredient","setFoodIngredients","setPriceRange","useEffect","recipeRows","foodForParent","foodIngredient","changeInValue","oldUnit","newUnit","ingredientID","newFoodIngredient","alreadyUpdated","setAlreadyUpdated","oldIngredients","setOldIngredients","launchUpdateFood","foodToUpdate","launchAddFood","foodNames","foodToAdd","newFoodsIngredients","substring","existingFoodsIngredients","ingr","FoodPackForm","foodsForDropdown","removeFood","flip","preventoverflow","addFoodPack","updateFoodPack","setFoods","setPrice","ffd","foodPackForParent","foodId","addedFoodPack","launchAddFoodPack","foodPackNames","foodPackToAdd","oldFoods","setOldFoods","launchUpdateFoodPack","foodPackToUpdate","ClearShopListButton","showModal","setShowModal","showOverLay","setShowOverlay","emptyStore","useRef","Cookie","Overlay","placement","Tooltip","StyledItem","ShopListCard","buttons","horizontal","multiplier","StyledHeader","StyledShopListButton","ShopListButton","StyledButton","Overview","ShopList","showView","setShowView","result","shopListArray","sort","b","nameA","toLowerCase","nameB","EmptyShopListButton","Nav","defaultActiveKey","Link","href","updateIngredient","launchUpdateIngredient","ingredientToUpdate","Routes","path","exact","toasts","closedToasts","setClosedToasts","toastsToShow","t","aria-live","aria-atomic","Toast","onClose","SideDrawer","drawerClasses","BackDrop","backDropClickHandler","aria-label","App","sideDrawerOpen","setSideDrawerOpen","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","link","connectToDevTools","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.43bf0f68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/list.3487ab4b.svg\";","import { v4 as uuid } from 'uuid'\n\nconst alertReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ALERT':\n      return state.concat(action.data)\n    case 'CLEAR':\n      return state.filter(alert => alert.id !== action.id)\n    default:\n      return state\n  }\n}\n\nexport const clearAlert = id => {\n  return {\n    type: 'CLEAR',\n    id,\n  }\n}\n\nexport const setAlert = (header, body) => {\n  return dispatch => {\n    const id = uuid()\n    dispatch({\n      type: 'ADD_ALERT',\n      data: {\n        header,\n        body,\n        id,\n      },\n    })\n    setTimeout(() => {\n      dispatch(clearAlert(id))\n    }, 5000)\n  }\n}\n\nexport default alertReducer\n","const shopListReducer = (\n  state = { foodPacks: [], foods: [], ingredients: [], shopListIds: [] },\n  action\n) => {\n  switch (action.type) {\n    case 'INIT': {\n      break\n    }\n    case 'ADD_ITEM': {\n      const shopListIdsClone = [...state.shopListIds]\n      action.data.shopListIds.forEach(id => {\n        if (shopListIdsClone.map(slid => slid.id).includes(id)) {\n          shopListIdsClone.some(slid => {\n            if (slid.id === id) {\n              // eslint-disable-next-line no-param-reassign\n              slid.count++\n              return true\n            }\n            return false\n          })\n        } else {\n          shopListIdsClone.push({ id, count: 1 })\n        }\n      })\n      const object = state[action.data.set].find(\n        o => o.id === action.data.objectId\n      )\n      if (object) {\n        const setClone = [...state[action.data.set]]\n        setClone.forEach(o => {\n          if (o.id === action.data.objectId) {\n            // eslint-disable-next-line no-param-reassign\n            o.count++\n          }\n        })\n        return {\n          ...state,\n          [action.data.set]: setClone,\n          shopListIds: shopListIdsClone,\n        }\n      }\n      return {\n        ...state,\n        [action.data.set]: state[action.data.set].concat({\n          id: action.data.objectId,\n          count: 1,\n        }),\n        shopListIds: shopListIdsClone,\n      }\n    }\n    case 'REMOVE': {\n      const shopListIdsClone = [...state.shopListIds]\n      action.data.shopListIds.forEach(id => {\n        shopListIdsClone.filter(slid => {\n          if (slid.id === id) {\n            if (slid.count > 1) {\n              // eslint-disable-next-line no-param-reassign\n              slid.count--\n              return true\n            }\n            return false\n          }\n          return true\n        })\n      })\n      const object = state[action.data.set].find(\n        o => o.id === action.data.objectId\n      )\n      if (object.count === 1) {\n        return {\n          ...state,\n          [action.data.set]: state[action.data.set].filter(\n            o => o.id !== action.data.objectId\n          ),\n          shopListIds: shopListIdsClone,\n        }\n      }\n      const clone = [...state[action.data.set]]\n      clone.forEach(o => {\n        if (o.id === action.data.objectId) {\n          // eslint-disable-next-line no-param-reassign\n          o.count--\n        }\n      })\n      return {\n        ...state,\n        [action.data.set]: clone,\n        shopListIds: shopListIdsClone,\n      }\n    }\n    case 'EMPTY':\n      return { foodPacks: [], foods: [], ingredients: [], shopListIds: [] }\n    default:\n      return state\n  }\n}\n\nexport const addItem = objectForStore => {\n  return {\n    type: 'ADD_ITEM',\n    data: {\n      shopListIds: objectForStore.shopListIds,\n      objectId: objectForStore.objectId,\n      set: objectForStore.set,\n    },\n  }\n}\n\nexport const initShopList = objectForStore => {\n  return dispatch => {\n    objectForStore.forEach(o => {\n      dispatch(addItem(o))\n    })\n  }\n}\n\nexport const removeItem = objectForStore => {\n  return {\n    type: 'REMOVE',\n    data: {\n      shopListIds: objectForStore.shopListIds,\n      objectId: objectForStore.objectId,\n      set: objectForStore.set,\n    },\n  }\n}\n\nexport const emptyShopList = () => {\n  return {\n    type: 'EMPTY',\n  }\n}\n\nexport default shopListReducer\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport alertReducer from './alertReducer'\nimport shopListReducer from './shopListReducer'\n\nconst reducer = combineReducers({\n  alerts: alertReducer,\n  shopList: shopListReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import { gql } from '@apollo/client'\n\nexport const INGREDIENT_DETAILS = gql`\n  fragment IngredientDetails on Ingredient {\n    id\n    name\n    prices\n    priceRange {\n      min\n      max\n    }\n    pieces\n    brand\n    weight\n    kcal {\n      total\n      inOnePiece\n      in100g\n    }\n    fat {\n      total\n      inOnePiece\n      in100g\n    }\n    saturatedFat {\n      total\n      inOnePiece\n      in100g\n    }\n    carbs {\n      total\n      inOnePiece\n      in100g\n    }\n    sugars {\n      total\n      inOnePiece\n      in100g\n    }\n    protein {\n      total\n      inOnePiece\n      in100g\n    }\n    salt {\n      total\n      inOnePiece\n      in100g\n    }\n  }\n`\n\nconst INGREDIENT_DETAILS_WITH_REF = gql`\n  fragment IngredientDetailsWithRef on Ingredient {\n    usedInFoods {\n      id\n      name\n    }\n    ...IngredientDetails\n  }\n  ${INGREDIENT_DETAILS}\n`\n\nexport const ALL_INGREDIENTS = gql`\n  query allIngredients($name: String) {\n    allIngredients(name: $name) {\n      ...IngredientDetailsWithRef\n    }\n  }\n  ${INGREDIENT_DETAILS_WITH_REF}\n`\n\nexport const ADD_INGREDIENT = gql`\n  mutation addIngredient(\n    $name: String!\n    $prices: [Float!]\n    $brand: String\n    $pieces: Int\n    $weight: Float\n    $kcal: Float\n    $fat: Float\n    $saturatedFat: Float\n    $carbs: Float\n    $sugars: Float\n    $protein: Float\n    $salt: Float\n  ) {\n    addIngredient(\n      name: $name\n      prices: $prices\n      pieces: $pieces\n      brand: $brand\n      weight: $weight\n      kcal: $kcal\n      fat: $fat\n      saturatedFat: $saturatedFat\n      carbs: $carbs\n      sugars: $sugars\n      protein: $protein\n      salt: $salt\n    ) {\n      ...IngredientDetailsWithRef\n    }\n  }\n  ${INGREDIENT_DETAILS_WITH_REF}\n`\n\nexport const INGREDIENT_ADDED = gql`\n  subscription {\n    ingredientAdded {\n      ...IngredientDetailsWithRef\n    }\n  }\n  ${INGREDIENT_DETAILS_WITH_REF}\n`\n\nexport const DELETE_INGREDIENT = gql`\n  mutation deleteIngredient($id: ID!) {\n    deleteIngredient(id: $id) {\n      ...IngredientDetailsWithRef\n    }\n  }\n  ${INGREDIENT_DETAILS_WITH_REF}\n`\n\nexport const UPDATE_INGREDIENT = gql`\n  mutation updateIngredient(\n    $id: ID!\n    $name: String!\n    $prices: [Float!]\n    $brand: String\n    $pieces: Int\n    $weight: Float\n    $kcal: Float\n    $fat: Float\n    $saturatedFat: Float\n    $carbs: Float\n    $sugars: Float\n    $protein: Float\n    $salt: Float\n  ) {\n    updateIngredient(\n      id: $id\n      name: $name\n      prices: $prices\n      pieces: $pieces\n      brand: $brand\n      weight: $weight\n      kcal: $kcal\n      fat: $fat\n      saturatedFat: $saturatedFat\n      carbs: $carbs\n      sugars: $sugars\n      protein: $protein\n      salt: $salt\n    ) {\n      ...IngredientDetailsWithRef\n    }\n  }\n  ${INGREDIENT_DETAILS_WITH_REF}\n`\n","import { gql } from '@apollo/client'\nimport { INGREDIENT_DETAILS } from '../Ingredient/queries'\n\nexport const FOOD_DETAILS = gql`\n  fragment FoodDetails on Food {\n    id\n    name\n    priceRange {\n      min\n      max\n    }\n    recipe\n    ingredients {\n      item {\n        ...IngredientDetails\n      }\n      pieces\n      grams\n      id\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`\n\nconst FOOD_DETAILS_WITH_REF = gql`\n  fragment FoodDetailsWithRef on Food {\n    ...FoodDetails\n    usedInFoodPacks {\n      id\n      name\n    }\n  }\n  ${FOOD_DETAILS}\n`\n\nexport const ALL_FOODS = gql`\n  query allFoods($name: String) {\n    allFoods(name: $name) {\n      ...FoodDetailsWithRef\n    }\n  }\n  ${FOOD_DETAILS_WITH_REF}\n`\n\nexport const ADD_FOOD = gql`\n  mutation addFood(\n    $name: String!\n    $ingredients: [String!]!\n    $recipe: [String!]!\n  ) {\n    addFood(name: $name, ingredients: $ingredients, recipe: $recipe) {\n      ...FoodDetailsWithRef\n    }\n  }\n  ${FOOD_DETAILS_WITH_REF}\n`\n\nexport const FOOD_ADDED = gql`\n  subscription {\n    foodAdded {\n      ...FoodDetailsWithRef\n    }\n  }\n  ${FOOD_DETAILS_WITH_REF}\n`\n\nexport const DELETE_FOOD = gql`\n  mutation deleteFood($id: ID!) {\n    deleteFood(id: $id) {\n      ...FoodDetailsWithRef\n    }\n  }\n  ${FOOD_DETAILS_WITH_REF}\n`\n\nexport const UPDATE_FOOD = gql`\n  mutation updateFood(\n    $id: ID!\n    $name: String\n    $ingredients: [String!]\n    $recipe: [String!]\n  ) {\n    updateFood(\n      id: $id\n      name: $name\n      ingredients: $ingredients\n      recipe: $recipe\n    ) {\n      ...FoodDetailsWithRef\n    }\n  }\n  ${FOOD_DETAILS_WITH_REF}\n`\n","import { gql } from '@apollo/client'\nimport { FOOD_DETAILS } from '../Food/queries'\n\nconst FOODPACK_DETAILS = gql`\n  fragment FoodPackDetails on FoodPack {\n    id\n    name\n    foodsCount\n    foods {\n      ...FoodDetails\n    }\n  }\n  ${FOOD_DETAILS}\n`\n\nexport const ALL_FOODPACKS = gql`\n  query allFoodPacks($name: String) {\n    allFoodPacks(name: $name) {\n      ...FoodPackDetails\n    }\n  }\n  ${FOODPACK_DETAILS}\n`\n\nexport const ADD_FOODPACK = gql`\n  mutation addFoodPack($name: String!, $foods: [String!]!) {\n    addFoodPack(name: $name, foods: $foods) {\n      ...FoodPackDetails\n    }\n  }\n  ${FOODPACK_DETAILS}\n`\n\nexport const DELETE_FOODPACK = gql`\n  mutation deleteFoodPack($id: ID!) {\n    deleteFoodPack(id: $id) {\n      ...FoodPackDetails\n    }\n  }\n  ${FOODPACK_DETAILS}\n`\n\nexport const UPDATE_FOODPACK = gql`\n  mutation updateFoodPack($id: ID!, $name: String, $foods: [String!]) {\n    updateFoodPack(id: $id, name: $name, foods: $foods) {\n      ...FoodPackDetails\n    }\n  }\n  ${FOODPACK_DETAILS}\n`\n","import { useApolloClient } from '@apollo/client'\nimport isEqual from 'lodash.isequal'\nimport { ALL_INGREDIENTS } from '../Ingredient/queries'\nimport { ALL_FOODS } from '../Food/queries'\nimport { ALL_FOODPACKS } from '../FoodPack/queries'\n\nconst useUpdateCache = (collection, query, mode) => {\n  const client = useApolloClient()\n\n  const includedIn = (set, object) => set.map(i => i.id).includes(object.id)\n\n  const updateCacheWith = (object, oldRefs) => {\n    switch (mode) {\n      case 'ADD': {\n        const dataInStore = client.readQuery({ query })\n        if (!includedIn(dataInStore[collection], object)) {\n          const data = dataInStore[collection].concat(object)\n          client.writeQuery({\n            query,\n            data: {\n              [collection]: data,\n            },\n          })\n\n          if (collection === 'allFoods' && object.ingredients.length > 0) {\n            const { allIngredients } = client.readQuery({\n              query: ALL_INGREDIENTS,\n            })\n            const ingredientsInFood = object.ingredients.map(i => i.item.id)\n            const ingredientsData = allIngredients.map(i =>\n              ingredientsInFood.includes(i.id)\n                ? { ...i, usedInFoods: i.usedInFoods.concat(object) }\n                : i\n            )\n\n            client.writeQuery({\n              query: ALL_INGREDIENTS,\n              data: {\n                allIngredients: ingredientsData,\n              },\n            })\n          } else if (collection === 'allFoodPacks' && object.foods.length > 0) {\n            const { allFoods } = client.readQuery({\n              query: ALL_FOODS,\n            })\n            const foodsInFoodPack = object.foods.map(f => f.id)\n            const foodsData = allFoods.map(f =>\n              foodsInFoodPack.includes(f.id)\n                ? { ...f, usedInFoodPacks: f.usedInFoodPacks.concat(object) }\n                : f\n            )\n            client.writeQuery({\n              query: ALL_FOODS,\n              data: {\n                allFoods: foodsData,\n              },\n            })\n          }\n        }\n        break\n      }\n      case 'DELETE': {\n        const dataInStore = client.readQuery({ query })\n        if (includedIn(dataInStore[collection], object)) {\n          const data = dataInStore[collection].filter(o => o.id !== object.id)\n          client.writeQuery({\n            query,\n            data: {\n              [collection]: data,\n            },\n          })\n          if (collection === 'allIngredients') {\n            const { allFoods } = client.readQuery({\n              query: ALL_FOODS,\n            })\n            const usedInFoods = object.usedInFoods.map(f => f.id)\n            const foodsData = allFoods.map(f =>\n              usedInFoods.includes(f.id)\n                ? {\n                    ...f,\n                    ingredients: f.ingredients.filter(\n                      fi => fi.item.id !== object.id\n                    ),\n                  }\n                : f\n            )\n\n            client.writeQuery({\n              query: ALL_FOODS,\n              data: {\n                allFoods: foodsData,\n              },\n            })\n          } else if (collection === 'allFoods') {\n            const { allIngredients } = client.readQuery({\n              query: ALL_INGREDIENTS,\n            })\n            const ingredientsInFood = object.ingredients.map(i => i.item.id)\n            const ingredientsData = allIngredients.map(i =>\n              ingredientsInFood.includes(i.id)\n                ? {\n                    ...i,\n                    usedInFoods: i.usedInFoods.filter(f => f.id !== object.id),\n                  }\n                : i\n            )\n            client.writeQuery({\n              query: ALL_INGREDIENTS,\n              data: {\n                allIngredients: ingredientsData,\n              },\n            })\n\n            const { allFoodPacks } = client.readQuery({\n              query: ALL_FOODPACKS,\n            })\n            const usedInFoodPacks = object.usedInFoodPacks.map(fp => fp.id)\n            const foodPackData = allFoodPacks.map(fp =>\n              usedInFoodPacks.includes(fp.id)\n                ? { ...fp, foods: fp.foods.filter(f => f.id !== object.id) }\n                : fp\n            )\n            client.writeQuery({\n              query: ALL_FOODPACKS,\n              data: {\n                allFoodPacks: foodPackData,\n              },\n            })\n          } else if (collection === 'allFoodPacks') {\n            const { allFoods } = client.readQuery({\n              query: ALL_FOODS,\n            })\n            const foodsInFoodPack = object.foods.map(f => f.id)\n            const foodsData = allFoods.map(f =>\n              foodsInFoodPack.includes(f.id)\n                ? {\n                    ...f,\n                    usedInFoodPacks: f.usedInFoodPacks.filter(\n                      fp => fp.id !== object.id\n                    ),\n                  }\n                : f\n            )\n            client.writeQuery({\n              query: ALL_FOODS,\n              data: {\n                allFoods: foodsData,\n              },\n            })\n          }\n        }\n        break\n      }\n      case 'UPDATE': {\n        let newRefs\n        let refQuery\n        let refCollection\n        let usedInObjects\n        if (collection === 'allFoods') {\n          newRefs = object.ingredients.map(i => i.item.id)\n          refQuery = ALL_INGREDIENTS\n          refCollection = 'allIngredients'\n          usedInObjects = 'usedInFoods'\n        }\n        if (collection === 'allFoodPacks') {\n          newRefs = object.foods.map(f => f.id)\n          refQuery = ALL_FOODS\n          refCollection = 'allFoods'\n          usedInObjects = 'usedInFoodPacks'\n        }\n\n        if (!isEqual(oldRefs, newRefs)) {\n          const setWithUniqueValues = new Set([...oldRefs, ...newRefs])\n\n          const dataFromDB = client.readQuery({\n            query: refQuery,\n          })\n          const refsFromDB = dataFromDB[refCollection]\n\n          const uniqueRefObjectFromCache = refsFromDB.find(r =>\n            setWithUniqueValues.has(r.id)\n          )\n          const notUpdatedYet = refObject => {\n            if (oldRefs.includes(refObject.id)) {\n              return refObject[usedInObjects].map(o => o.id).includes(object.id)\n            }\n            return !refObject[usedInObjects].map(o => o.id).includes(object.id)\n          }\n\n          if (notUpdatedYet(uniqueRefObjectFromCache)) {\n            const data = refsFromDB.map(refObject => {\n              if (setWithUniqueValues.has(refObject.id)) {\n                if (!newRefs.includes(refObject.id)) {\n                  return {\n                    ...refObject,\n                    [usedInObjects]: refObject[usedInObjects].filter(\n                      o => o.id !== object.id\n                    ),\n                  }\n                }\n                if (oldRefs.includes(refObject.id)) {\n                  return refObject\n                }\n                return {\n                  ...refObject,\n                  [usedInObjects]: refObject[usedInObjects].concat(object),\n                }\n              }\n              return refObject\n            })\n\n            client.writeQuery({\n              query: refQuery,\n              data: {\n                [refCollection]: data,\n              },\n            })\n          }\n        }\n\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  return updateCacheWith\n}\n\nexport default useUpdateCache\n","import { useSubscription } from '@apollo/client'\nimport useUpdateCache from './useUpdateCache'\nimport { ALL_INGREDIENTS, INGREDIENT_ADDED } from '../Ingredient/queries'\nimport { ALL_FOODS, FOOD_ADDED } from '../Food/queries'\n\nconst useEpicSubscription = () => {\n  //Subscriptions for Ingredient\n  const updateCacheWithIngredient = useUpdateCache(\n    'allIngredients',\n    ALL_INGREDIENTS,\n    'ADD'\n  )\n  useSubscription(INGREDIENT_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const addedIngredient = subscriptionData.data.ingredientAdded\n      updateCacheWithIngredient(addedIngredient)\n    },\n  })\n\n  //Subscriptions for Food\n  const updateCacheWithFood = useUpdateCache('allFoods', ALL_FOODS, 'ADD')\n  useSubscription(FOOD_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const addedFood = subscriptionData.data.foodAdded\n      updateCacheWithFood(addedFood)\n    },\n  })\n}\n\nexport default useEpicSubscription\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../../css/DrawerToggleButton.css'\n\nconst DrawerToggleButton = ({ drawerClickHandler }) => {\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button className=\"toggle_button\" onClick={drawerClickHandler}>\n      <div className=\"toggle_button_line\" />\n      <div className=\"toggle_button_line\" />\n      <div className=\"toggle_button_line\" />\n    </button>\n  )\n}\n\nDrawerToggleButton.propTypes = {\n  drawerClickHandler: PropTypes.func.isRequired,\n}\n\nexport default DrawerToggleButton\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport '../../css/toolbar.css'\nimport DrawerToggleButton from './DrawerToggleButton'\nimport list from '../../resources/list.svg'\n// import logo from '../../resources/GoShopVege_logo.png'\n\nconst Toolbar = ({ drawerClickHandler }) => {\n  const history = useHistory()\n  return (\n    <header className=\"toolbar\">\n      <nav className=\"toolbar_navigation\">\n        {/* <div\n          className=\"toolbar_logo\"\n          onClick={() => history.push('/')}\n          onKeyPress={() => history.push('/')}\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          <img src={logo} alt=\"GoShopVege logo\" width=\"100rem\" />\n        </div> */}\n        <div className=\"toolbar_toggle_button\">\n          <DrawerToggleButton drawerClickHandler={drawerClickHandler} />\n        </div>\n        <div className=\"toolbar_brand\">\n          <Link to=\"/\">GoShopVege</Link>\n        </div>\n        <div className=\"spacer\" />\n        <div className=\"toolbar_navigation_items\">\n          <ul>\n            <li>\n              <Link to=\"/ruokapaketit\">Ruokapaketit</Link>\n            </li>\n            <li>\n              <Link to=\"/ruoat\">Ruoat</Link>\n            </li>\n            <li>\n              <Link to=\"/ainesosat\">Ainesosat</Link>\n            </li>\n          </ul>\n        </div>\n        <div\n          onClick={() => history.push('/ostoslista')}\n          onKeyPress={() => history.push('/ostoslista')}\n          role=\"button\"\n          tabIndex=\"0\"\n          className=\"list_icon\"\n        >\n          <img src={list} alt=\"list icon\" width=\"40rem\" />\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Toolbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../App.css'\n\nconst ThemeButton = ({ onClick, text, mode }) => {\n  return (\n    <div\n      className={mode === 'main' ? 'main_button' : 'accent_button'}\n      onClick={onClick}\n      onKeyDown={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <div className=\"button_flex\">{text}</div>\n    </div>\n  )\n}\n\nThemeButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  mode: PropTypes.string.isRequired,\n}\n\nexport default ThemeButton\n","import React from 'react'\nimport ThemeButton from '../../general/ThemeButton'\n\nconst Description = () => {\n  return (\n    <div className=\"description\">\n      <div className=\"front_page_text_div\">\n        <h2 className=\"front_page_header_1\">\n          Vegaaninen ostoslista helposti ja nopeasti\n        </h2>\n        <p className=\"front_page_header_2\">\n          <strong>GoShopVege</strong>\n          luo sinulle valmiin ostoslistan tietystä kaupasta tietylle aikavälille\n        </p>\n      </div>\n      <div className=\"front_page_button_div\">\n        <ThemeButton\n          onClick={() => console.log('aloitettu! :D')}\n          text=\"Aloita\"\n          mode=\"main\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Description\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Cookies from 'js-cookie'\nimport {\n  initShopList,\n  addItem,\n  removeItem,\n  emptyShopList,\n} from '../redux/shopListReducer'\nimport { setAlert } from '../redux/alertReducer'\n\n// eslint-disable-next-line consistent-return\nconst useUpdateStore = mode => {\n  const [initDone, setInitDone] = useState(false)\n  const dispatch = useDispatch()\n\n  switch (mode) {\n    case 'INITSHOPLIST': {\n      if (!initDone) {\n        setInitDone(true)\n        const currentShopList = Cookies.get('currentShopList')\n        if (!currentShopList) {\n          return Cookies.set('currentShopList', '[]')\n        }\n        return dispatch(initShopList(JSON.parse(currentShopList)))\n      }\n      break\n    }\n\n    case 'ADD': {\n      const add = objectForStore => {\n        let currentShopList = Cookies.get('currentShopList')\n        if (!currentShopList) {\n          Cookies.set('currentShopList', '[]')\n          currentShopList = []\n        } else {\n          currentShopList = JSON.parse(currentShopList)\n        }\n        currentShopList = currentShopList.concat(objectForStore)\n        Cookies.set('currentShopList', JSON.stringify(currentShopList))\n        dispatch(addItem(objectForStore))\n        dispatch(setAlert('success', 'Lisätty ostoslistaan!'))\n      }\n      return add\n    }\n\n    case 'REMOVE': {\n      const remove = objectForStore => {\n        const currentShopList = JSON.parse(Cookies.get('currentShopList'))\n        const filteredShopList = currentShopList.filter(\n          o => o.objectId !== objectForStore.objectId\n        )\n        Cookies.set('currentShopList', JSON.stringify(filteredShopList))\n        dispatch(removeItem(objectForStore))\n        dispatch(setAlert('success', ''))\n      }\n      return remove\n    }\n\n    case 'EMPTY': {\n      const empty = () => {\n        Cookies.remove('currentShopList')\n        dispatch(emptyShopList())\n        setAlert('success', 'Ostoslista tyhjätty!')\n      }\n      return empty\n    }\n    default:\n      break\n  }\n}\n\nexport default useUpdateStore\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport PropTypes from 'prop-types'\nimport useUpdateStore from '../hooks/useUpdateStore'\n\nconst ShopListButton = props => {\n  const [show, setShow] = useState(false)\n  const updateStore = useUpdateStore(props.mode)\n\n  const foundInShopList = props.storeSet.find(o => o.id === props.object.id)\n\n  let setInFinnish\n  if (props.set === 'foodPacks') {\n    setInFinnish = 'ruokapaketti'\n  } else if (props.set === 'foods') {\n    setInFinnish = 'ruoka'\n  } else if (props.set === 'ingredients') {\n    setInFinnish = 'ainesosa'\n  }\n\n  const objectForStore = { shopListIds: [], set: props.set }\n  objectForStore.objectId = props.object.id\n\n  if (props.set === 'foodPacks') {\n    props.object.foods.forEach(f => {\n      f.ingredients.forEach(i => {\n        objectForStore.shopListIds.push(i.item.id)\n      })\n    })\n  } else if (props.set === 'foods') {\n    props.object.ingredients.forEach(i => {\n      objectForStore.shopListIds.push(i.item.id)\n    })\n  } else if (props.set === 'ingredients') {\n    objectForStore.shopListIds.push(props.object.id)\n  }\n\n  const handleClick = () => {\n    setShow(false)\n    updateStore(objectForStore)\n  }\n\n  const variant = props.mode === 'ADD' ? 'light' : 'warning'\n  const text =\n    props.mode === 'ADD' ? 'Lisää ostoslistaan' : 'Poista ostoslistasta'\n\n  return (\n    <div style={{ display: 'inline-block' }}>\n      <Button variant={variant} onClick={() => setShow(true)}>\n        {text}\n      </Button>\n      <Modal show={show} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <strong>Lisätäänkö ostoslistaan?</strong>\n        </Modal.Header>\n        <Modal.Body>\n          {foundInShopList &&\n            props.mode === 'ADD' &&\n            `Tämä ${setInFinnish} on jo ostoslistassa. Lisätäänkö uudestaan?`}\n          {!foundInShopList &&\n            props.mode === 'ADD' &&\n            'Lisätäänkö ostoslistaan?'}\n\n          {props.mode === 'REMOVE' &&\n            `Poistetaanko ${setInFinnish} ostoslistasta?`}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => setShow(false)}>\n            Peruuta\n          </Button>\n          <Button variant={variant} onClick={handleClick}>\n            {text}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nShopListButton.propTypes = {\n  mode: PropTypes.string.isRequired,\n  set: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    storeSet: state.shopList[ownProps.set],\n  }\n}\n\nexport default connect(mapStateToProps)(ShopListButton)\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport '../../css/contentCard.css'\n\nconst ListFoods = ({ foods, history }) => (\n  <div>\n    <Container>\n      <Row>\n        {foods.map(f => (\n          <Card\n            className=\"foodCard\"\n            style={{ width: '18rem', margin: '1rem' }}\n            key={f.id}\n          >\n            <Card.Header>Ruoka</Card.Header>\n            <Card.Body>\n              <Card.Title>{f.name}</Card.Title>\n              <Card.Body>\n                {f.ingredients.map(i => (\n                  <div key={i.item.id}>{i.item.name}</div>\n                ))}\n              </Card.Body>\n              <Button\n                variant=\"primary\"\n                onClick={() => history.push(`/ruoat/${f.name}`)}\n              >\n                Näytä\n              </Button>\n              <ShopListButton mode=\"ADD\" object={f} set=\"foods\" />\n            </Card.Body>\n          </Card>\n        ))}\n      </Row>\n    </Container>\n  </div>\n)\n\nexport default ListFoods\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { Link, useHistory } from 'react-router-dom'\nimport { ALL_FOODS } from '../queries'\nimport ListFoods from '../presentational/ListFoods'\n\nconst ListFoodsContainer = () => {\n  const history = useHistory()\n  const foodsResult = useQuery(ALL_FOODS)\n\n  if (foodsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const foods = foodsResult.data.allFoods\n\n  return (\n    <div>\n      <h3>\n        Ruoat\n        <small style={{ paddingLeft: 10 }}>\n          <Link to=\"/ruoat/uusi\">luo uusi ruoka</Link>\n        </small>\n      </h3>\n      <ListFoods foods={foods} history={history} />\n    </div>\n  )\n}\n\nexport default ListFoodsContainer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ListIngredients = ({ ingredients }) => (\n  <div>\n    <table>\n      <tbody>\n        <tr>\n          <th>Nimi</th>\n          <th>Hintahaarukka</th>\n          <th>kcal yhteensä</th>\n        </tr>\n        {ingredients.map(i => (\n          <tr key={i.id}>\n            <td>\n              <Link to={`/ainesosat/${i.name}`}>{i.name}</Link>\n            </td>\n            <td>\n              {i.priceRange.min.toFixed(2)}€-{i.priceRange.max.toFixed(2)}€\n            </td>\n            <td>{i.kcal.total}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n)\n\nexport default ListIngredients\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { ALL_INGREDIENTS } from '../queries'\nimport ListIngredients from '../presentational/ListIngredients'\n\nconst ListIngredientsContainer = () => {\n  const ingredientsResult = useQuery(ALL_INGREDIENTS)\n\n  if (ingredientsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const ingredients = ingredientsResult.data.allIngredients\n\n  return (\n    <div>\n      <h3>\n        Ainesosat\n        <small style={{ paddingLeft: 10 }}>\n          <Link to=\"/ainesosat/uusi\">luo uusi ainesosa</Link>\n        </small>\n      </h3>\n      <ListIngredients ingredients={ingredients} />\n    </div>\n  )\n}\n\nexport default ListIngredientsContainer\n","import React, { useState, useImperativeHandle } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst DeleteModal = React.forwardRef((props, ref) => {\n  const [show, setShow] = useState(true)\n\n  const hideModal = () => {\n    setShow(false)\n    props.setModalVisible(false)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      hideModal,\n    }\n  })\n\n  return (\n    <div>\n      <Modal\n        size=\"lg\"\n        centered\n        show={show}\n        animation={false}\n        onHide={hideModal}\n      >\n        <Modal.Dialog>\n          <Modal.Header closeButton>\n            <Modal.Title>Ennen poistamista</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>{props.children}</Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={props.handleClick}>\n              {props.buttonLabel}\n            </Button>\n          </Modal.Footer>\n        </Modal.Dialog>\n      </Modal>\n    </div>\n  )\n})\n\nexport default DeleteModal\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DeleteModalBody = ({ ingredient }) => (\n  <div>\n    <h6>\n      Otathan huomioon että <strong>{ingredient.name}</strong> poistuu samalla\n      seuraavista ruoista:\n    </h6>\n    {ingredient.usedInFoods.map(f => (\n      <div key={f.id}>\n        <Link to={`/ruoat/${f.name}`}>{f.name}</Link>\n      </div>\n    ))}\n  </div>\n)\n\nexport default DeleteModalBody\n","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useMutation } from '@apollo/client'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport DeleteModal from '../../general/DeleteModal'\nimport DeleteModalBody from './DeleteModalBody'\nimport { DELETE_INGREDIENT, ALL_INGREDIENTS } from '../queries'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\n// eslint-disable-next-line no-shadow\nconst DeleteIngredientButton = ({ ingredient, setAlert }) => {\n  const updateCacheWith = useUpdateCache(\n    'allIngredients',\n    ALL_INGREDIENTS,\n    'DELETE'\n  )\n  const [deleteIngredient] = useMutation(DELETE_INGREDIENT, {\n    update: (store, response) => {\n      updateCacheWith(response.data.deleteIngredient)\n    },\n  })\n  const [modalVisible, setModalVisible] = useState(false)\n\n  const deleteIngrRef = React.createRef()\n\n  const handleClick = async () => {\n    deleteIngrRef.current.hideModal()\n    try {\n      await deleteIngredient({\n        variables: {\n          id: ingredient.id,\n        },\n      })\n    } catch (e) {\n      console.log(\n        'Error deleting ingredient in DeleteIngredientButton: ',\n        e.message\n      )\n      setAlert('danger', 'Pieleen meni. Kokeile uudemman kerran.')\n    }\n    setAlert('success', `Ainesosa ${ingredient.name} poistettu`)\n  }\n  const fireModal = () => {\n    setModalVisible(true)\n  }\n\n  return (\n    <div style={{ display: 'inline-block' }}>\n      {modalVisible && (\n        <DeleteModal\n          setModalVisible={setModalVisible}\n          buttonLabel=\"poista ainesosa\"\n          handleClick={handleClick}\n          ref={deleteIngrRef}\n        >\n          <DeleteModalBody ingredient={ingredient} />\n        </DeleteModal>\n      )}\n      <Button variant=\"outline-danger\" onClick={fireModal}>\n        Poista ainesosa\n      </Button>\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(DeleteIngredientButton)\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from 'react-router-dom'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport DeleteIngredientButton from '../utils/DeleteIngredientButton'\n\nconst StyledTh = styled.th`\n  padding-left: 20px;\n`\n\nconst macroDetails = [\n  {\n    title: 'Energiaa',\n    name: 'kcal',\n    unit: 'kcal',\n  },\n  {\n    title: 'Rasvaa',\n    name: 'fat',\n  },\n  {\n    title: 'josta tyydyttynyttä',\n    name: 'saturatedFat',\n    unit: 'g',\n  },\n  {\n    title: 'Hiilarit',\n    name: 'carbs',\n    unit: 'g',\n  },\n  {\n    title: 'joista sokereita',\n    name: 'sugars',\n    unit: 'g',\n  },\n  {\n    title: 'Protskua',\n    name: 'protein',\n    unit: 'g',\n  },\n  {\n    title: 'Suolaa',\n    name: 'salt',\n    unit: 'g',\n  },\n]\n\nconst Ingredient = ({ ingredient }) => {\n  const history = useHistory()\n  const macros = macroDetails.map(m => ({\n    data: ingredient[m.name],\n    details: m,\n  }))\n  const { name, priceRange, brand, weight, pieces } = ingredient\n  return (\n    <div>\n      <h2>\n        {name}\n        <ShopListButton mode=\"ADD\" object={ingredient} set=\"ingredients\" />\n        <Button\n          variant=\"outline-warning\"\n          onClick={() => history.push(`/ainesosat/paivita/${name}`)}\n        >\n          Päivitä\n        </Button>\n        <DeleteIngredientButton ingredient={ingredient} />\n      </h2>\n      <hr />\n      <h4>Pakkauksen yleistiedot</h4>\n      <table>\n        <tbody>\n          <tr>\n            <th>Hintahaarukka:</th>\n            <td>\n              {priceRange.min.toFixed(2)} € - {priceRange.max.toFixed(2)} €\n            </td>\n          </tr>\n          <tr>\n            <th>Brändi:</th>\n            <td>{brand || '(puuttuu toistaiseksi)'}</td>\n          </tr>\n          <tr>\n            <th>Paino:</th>\n            <td>\n              {weight !== null ? `${weight} g` : '(puuttuu toistaiseksi)'}\n            </td>\n          </tr>\n          {pieces !== null && (\n            <tr>\n              <th>Kappaletta:</th>\n              <td>{pieces}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <br />\n      <h4>Ravintoainetaulukko</h4>\n      <table>\n        {macros.map(m => (\n          <tbody key={m.details.title}>\n            <tr>\n              <th>{m.details.title}</th>\n            </tr>\n            <tr>\n              <StyledTh>100 grammassa:</StyledTh>\n              <td>\n                {m.data.in100g !== null\n                  ? `${m.data.in100g} g`\n                  : '(puuttuu toistaiseksi)'}\n              </td>\n            </tr>\n            <tr>\n              <StyledTh>koko pakkauksessa:</StyledTh>\n              <td>\n                {m.data.total !== null\n                  ? `${m.data.total} g`\n                  : '(puuttuu toistaiseksi)'}\n              </td>\n            </tr>\n            {m.data.inOnePiece !== null && (\n              <tr>\n                <StyledTh>Yhdessä kappaleessa:</StyledTh>\n                <td>{m.data.inOnePiece} g</td>\n              </tr>\n            )}\n          </tbody>\n        ))}\n      </table>\n    </div>\n  )\n}\n\nexport default Ingredient\n","import React from 'react'\nimport { useRouteMatch, Redirect } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { ALL_INGREDIENTS } from '../queries'\nimport Ingredient from '../presentational/Ingredient'\n\nconst IngredientContainer = () => {\n  const ingredientName = useRouteMatch('/ainesosat/:name').params.name\n  const ingredientsResult = useQuery(ALL_INGREDIENTS)\n\n  if (ingredientsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const ingredient = ingredientsResult.data.allIngredients.find(\n    i => i.name === ingredientName\n  )\n\n  if (!ingredient) {\n    return <Redirect to=\"/ainesosat\" />\n  }\n\n  return (\n    <div>\n      <Ingredient ingredient={ingredient} />\n    </div>\n  )\n}\n\nexport default IngredientContainer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DeleteModalBody = ({ food }) => (\n  <div>\n    <h6>\n      Otathan huomioon että <strong>{food.name}</strong> poistuu samalla\n      seuraavista ruokapaketeista:\n    </h6>\n    {food.usedInFoodPacks.map(fp => (\n      <div key={fp.id}>\n        <Link to={`/ruokapaketit/${fp.name}`}>{fp.name}</Link>\n      </div>\n    ))}\n  </div>\n)\n\nexport default DeleteModalBody\n","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useMutation } from '@apollo/client'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport { DELETE_FOOD, ALL_FOODS } from '../queries'\nimport DeleteModal from '../../general/DeleteModal'\nimport DeleteModalBody from './DeleteModalBody'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\n// eslint-disable-next-line no-shadow\nconst DeleteFoodButton = ({ food, setAlert }) => {\n  const [modalVisible, setModalVisible] = useState(false)\n  const [alreadyDeleted, setAlreadyDeleted] = useState(false)\n  const updateCacheWith = useUpdateCache('allFoods', ALL_FOODS, 'DELETE')\n\n  const [deleteFood] = useMutation(DELETE_FOOD, {\n    update: (store, response) => {\n      updateCacheWith(response.data.deleteFood)\n    },\n  })\n\n  const deleteFoodRef = React.createRef()\n\n  const handleClick = async () => {\n    deleteFoodRef.current.hideModal()\n    try {\n      setAlreadyDeleted(true)\n      await deleteFood({\n        variables: {\n          id: food.id,\n        },\n      })\n      setAlert('success', `Ruoka ${food.name} poistettu!`)\n    } catch (e) {\n      setAlert('danger', 'Jotain meni vikaan, kokeile uudestaan!')\n      setAlreadyDeleted(false)\n      console.log('Error deleting food in DeleteFoodButton: ', e.message)\n    }\n  }\n\n  const fireModal = () => {\n    setModalVisible(true)\n  }\n\n  if (alreadyDeleted) {\n    return <Redirect to=\"/ruoat\" />\n  }\n\n  return (\n    <div>\n      {modalVisible && (\n        <DeleteModal\n          setModalVisible={setModalVisible}\n          buttonLabel=\"poista ruoka\"\n          handleClick={handleClick}\n          ref={deleteFoodRef}\n        >\n          <DeleteModalBody food={food} />\n        </DeleteModal>\n      )}\n      <Button variant=\"outline-danger\" onClick={fireModal}>\n        poista ruoka\n      </Button>\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(DeleteFoodButton)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nconst UpdateFoodButton = ({ food }) => (\n  <Link to={`/ruoat/paivita/${food.name}`}>\n    <Button variant=\"outline-warning\">päivitä</Button>\n  </Link>\n)\n\nexport default UpdateFoodButton\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport ListIngredients from '../../Ingredient/presentational/ListIngredients'\nimport DeleteFoodButton from '../utils/DeleteFoodButton'\nimport UpdateFoodButton from '../utils/UpdateFoodButton'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport '../../css/contentCard.css'\n\nconst Food = ({ food }) => (\n  <div>\n    <Card className=\"foodCard\" style={{ padding: 30 }}>\n      <h3>\n        {food.name}\n        <UpdateFoodButton food={food} />\n        <DeleteFoodButton food={food} />\n        <ShopListButton mode=\"ADD\" object={food} set=\"foods\" />\n      </h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>Hinta:</th>\n            <td>{food.price} €</td>\n          </tr>\n          <tr>\n            <th>Kilokalorit:</th>\n            <td>{food.kcal}</td>\n          </tr>\n        </tbody>\n      </table>\n      <br />\n      <ListIngredients\n        ingredients={food.ingredients.map(i => i.item)}\n        hideButtons={true}\n      />\n      <br />\n      <strong>resepti</strong>\n      {food.recipe.map(step => (\n        <ul key={step}>\n          <li>{step}</li>\n        </ul>\n      ))}\n    </Card>\n  </div>\n)\n\nexport default Food\n","import React from 'react'\nimport { useRouteMatch, Redirect } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { ALL_FOODS } from '../queries'\nimport Food from '../presentational/Food'\n\nconst FoodContainer = () => {\n  const foodName = useRouteMatch('/ruoat/:name').params.name\n  const foodsResult = useQuery(ALL_FOODS)\n\n  if (foodsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const food = foodsResult.data.allFoods.find(f => f.name === foodName)\n\n  if (!food) {\n    return <Redirect to=\"/ruoat\" />\n  }\n\n  return (\n    <div>\n      <Food food={food} />\n    </div>\n  )\n}\n\nexport default FoodContainer\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport '../../css/contentCard.css'\n\nconst ListFoodPacks = props => (\n  <div>\n    {props.foodPacks.map(fp => (\n      <div\n        className=\"foodPackCard\"\n        style={{ width: '18rem', margin: '1rem' }}\n        key={fp.id}\n      >\n        {fp.name}\n      </div>\n    ))}\n  </div>\n)\n\nexport default ListFoodPacks\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { Link, useHistory } from 'react-router-dom'\nimport { ALL_FOODPACKS } from '../queries'\nimport ListFoodPacks from '../presentational/ListFoodPacks'\n\nconst ListFoodPacksContainer = () => {\n  const foodPacksResult = useQuery(ALL_FOODPACKS)\n  const history = useHistory()\n\n  if (foodPacksResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const foodPacks = foodPacksResult.data.allFoodPacks\n\n  return (\n    <div>\n      <h3>\n        Ruokapaketit\n        <small style={{ paddingLeft: 10 }}>\n          <Link to=\"/ruokapaketit/uusi\">luo uusi ruokapaketti</Link>\n        </small>\n      </h3>\n      <ListFoodPacks foodPacks={foodPacks} history={history} />\n    </div>\n  )\n}\n\nexport default ListFoodPacksContainer\n","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useMutation } from '@apollo/client'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport { DELETE_FOODPACK, ALL_FOODPACKS } from '../queries'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\n// eslint-disable-next-line no-shadow\nconst DeleteFoodPackButton = ({ foodPack, setAlert }) => {\n  const [alreadyDeleted, setAlreadyDeleted] = useState(false)\n  const updateCacheWith = useUpdateCache(\n    'allFoodPacks',\n    ALL_FOODPACKS,\n    'DELETE'\n  )\n  const [deleteFoodPack] = useMutation(DELETE_FOODPACK, {\n    update: (store, response) => {\n      updateCacheWith(response.data.deleteFoodPack)\n    },\n  })\n\n  const handleClick = async () => {\n    const result = window.confirm(`Poistetaanko ruokapaketti ${foodPack.name}`)\n    if (result) {\n      try {\n        setAlreadyDeleted(true)\n        await deleteFoodPack({\n          variables: {\n            id: foodPack.id,\n          },\n        })\n      } catch (error) {\n        setAlreadyDeleted(false)\n        console.log(\n          'Error deleting foodPack in DeleteFoodPackButton: ',\n          error.message\n        )\n        setAlert('danger', 'Jotain meni vikaan. Yritä uudelleen!')\n      }\n    }\n    setAlert('success', `Ruokapaketti ${foodPack.name} poistettu!`)\n  }\n  if (alreadyDeleted) {\n    return <Redirect to=\"/ruokapaketit\" />\n  }\n  return (\n    <Button variant=\"outline-danger\" onClick={handleClick}>\n      poista ruokapaketti\n    </Button>\n  )\n}\n\nexport default connect(null, { setAlert })(DeleteFoodPackButton)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nconst UpdateFoodPackButton = ({ foodPack }) => (\n  <Link to={`/ruokapaketit/paivita/${foodPack.name}`}>\n    <Button variant=\"outline-warning\">päivitä</Button>\n  </Link>\n)\n\nexport default UpdateFoodPackButton\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport ListFoods from '../../Food/presentational/ListFoods'\nimport DeleteFoodPackButton from '../utils/DeleteFoodPackButton'\nimport UpdateFoodPackButton from '../utils/UpdateFoodPackButton'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport '../../css/contentCard.css'\n\nconst FoodPack = ({ foodPack, history }) => (\n  <div>\n    <Card className=\"foodPackCard\" style={{ padding: 30 }}>\n      <h2>\n        {foodPack.name}\n        <UpdateFoodPackButton foodPack={foodPack} />\n        <DeleteFoodPackButton foodPack={foodPack} />\n        <ShopListButton mode=\"ADD\" object={foodPack} set=\"foodPacks\" />\n      </h2>\n      <p>\n        <strong>Kilokalorit: </strong>\n        {foodPack.kcal}\n      </p>\n      <p>\n        <strong>Hinta: </strong>\n        {foodPack.price} €\n      </p>\n      <ListFoods foods={foodPack.foods} history={history} />\n    </Card>\n  </div>\n)\n\nexport default FoodPack\n","import React from 'react'\nimport { useRouteMatch, Redirect, useHistory } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { ALL_FOODPACKS } from '../queries'\nimport FoodPack from '../presentational/FoodPack'\n\nconst FoodPackContainer = () => {\n  const history = useHistory()\n  const foodPackName = useRouteMatch('/ruokapaketit/:name').params.name\n\n  const foodPacksResult = useQuery(ALL_FOODPACKS)\n\n  if (foodPacksResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const foodPack = foodPacksResult.data.allFoodPacks.find(\n    fp => fp.name === foodPackName\n  )\n\n  if (!foodPack) {\n    return <Redirect to=\"/ruokapaketit\" />\n  }\n\n  return (\n    <div>\n      <FoodPack foodPack={foodPack} history={history} />\n    </div>\n  )\n}\n\nexport default FoodPackContainer\n","import { useState } from 'react'\n\nconst useField = (type, state) => {\n  const setState = state !== null ? state : ''\n  const [value, setValue] = useState(setState)\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return [{ value, type, onChange }, reset, setValue]\n}\n\nexport default useField\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { connect } from 'react-redux'\nimport useField from '../../hooks/useField'\nimport { ADD_INGREDIENT, ALL_INGREDIENTS } from '../queries'\nimport useUpdateCache from '../../hooks/useUpdateCache'\nimport { setAlert } from '../../redux/alertReducer'\n\n// eslint-disable-next-line no-shadow\nconst IngredientForm = ({ setAlert, update, ingredient }) => {\n  const history = useHistory()\n  const [name] = useField('text', ingredient ? ingredient.name : null)\n  const [prices, setPrices] = useState(ingredient ? ingredient.prices : [])\n  const [newPrice, setNewPrice] = useState('')\n  const [pieces] = useField('number', ingredient ? ingredient.pieces : null)\n  const [brand] = useField('text', ingredient ? ingredient.brand : null)\n  const [weight] = useField('number', ingredient ? ingredient.weight : null)\n  const [kcal] = useField('number', ingredient ? ingredient.kcal.in100g : null)\n  const [fat] = useField('number', ingredient ? ingredient.fat.in100g : null)\n  const [saturatedFat] = useField(\n    'number',\n    ingredient ? ingredient.saturatedFat.in100g : null\n  )\n  const [carbs] = useField(\n    'number',\n    ingredient ? ingredient.carbs.in100g : null\n  )\n  const [sugars] = useField(\n    'number',\n    ingredient ? ingredient.sugars.in100g : null\n  )\n  const [protein] = useField(\n    'number',\n    ingredient ? ingredient.protein.in100g : null\n  )\n  const [salt] = useField('number', ingredient ? ingredient.salt.in100g : null)\n\n  const { loading, data } = useQuery(ALL_INGREDIENTS)\n\n  const updateCacheWith = useUpdateCache(\n    'allIngredients',\n    ALL_INGREDIENTS,\n    'ADD'\n  )\n  const [addIngredient] = useMutation(ADD_INGREDIENT, {\n    update: (store, response) => {\n      updateCacheWith(response.data.addIngredient)\n      history.push('/ainesosat')\n    },\n  })\n\n  if (loading) {\n    return <div>...loading</div>\n  }\n\n  const ingredientNames = data.allIngredients.map(i => i.name)\n\n  const submit = async e => {\n    e.preventDefault()\n\n    if (update === null) {\n      if (name.value.length < 4) {\n        setAlert('danger', 'Nimen pituuden täytyy olla vähintään 4 !')\n        return\n      }\n\n      if (ingredientNames.includes(name.value)) {\n        setAlert(\n          'danger',\n          `Ainesosa \"${name.value}\" on jo olemassa. Valitse toinen nimi!`\n        )\n        return\n      }\n    }\n\n    if (prices.length === 0) {\n      setAlert('danger', 'Ainesosalla täytyy olla ainakin yksi hinta!')\n      return\n    }\n    const ingredientForMutation = {\n      ...(name.value && { name: name.value }),\n      ...(prices && { prices }),\n      ...(brand.value && { brand: brand.value }),\n      ...(pieces.value && { pieces: Number(pieces.value) }),\n      ...(weight.value && { weight: Number(weight.value) }),\n      ...(kcal.value && { kcal: Number(kcal.value) }),\n      ...(fat.value && { fat: Number(fat.value) }),\n      ...(saturatedFat.value && {\n        saturatedFat: Number(saturatedFat.value),\n      }),\n      ...(carbs.value && { carbs: Number(carbs.value) }),\n      ...(sugars.value && { sugars: Number(sugars.value) }),\n      ...(protein.value && { protein: Number(protein.value) }),\n      ...(salt.value && { salt: Number(salt.value) }),\n    }\n    if (update !== null) {\n      update(ingredientForMutation)\n    } else {\n      try {\n        await addIngredient({\n          variables: {\n            name: name.value,\n            prices,\n            ...(brand.value && { brand: brand.value }),\n            ...(pieces.value && { pieces: Number(pieces.value) }),\n            ...(weight.value && { weight: Number(weight.value) }),\n            ...(kcal.value && { kcal: Number(kcal.value) }),\n            ...(fat.value && { fat: Number(fat.value) }),\n            ...(saturatedFat.value && {\n              saturatedFat: Number(saturatedFat.value),\n            }),\n            ...(carbs.value && { carbs: Number(carbs.value) }),\n            ...(sugars.value && { sugars: Number(sugars.value) }),\n            ...(protein.value && { protein: Number(protein.value) }),\n            ...(salt.value && { salt: Number(salt.value) }),\n          },\n        })\n        setAlert('success', `Uusi ainesosa ${name.value} lisätty!`)\n      } catch (error) {\n        console.log(\n          'Error adding ingredient in IngredientForm.js',\n          error.message\n        )\n        setAlert(\n          'danger',\n          'Hmm... bitti taitaa olla poikittain. Kokeile uudestaan.'\n        )\n      }\n    }\n  }\n\n  const addPrice = () => {\n    setPrices(prices.concat(Number(newPrice)))\n    setNewPrice('')\n  }\n\n  const deletePrice = () => {\n    const pricesClone = [...prices]\n    pricesClone.pop(pricesClone.length)\n    setPrices(pricesClone)\n  }\n\n  return (\n    <div>\n      <h2>\n        {update !== null ? `Päivitä ${ingredient.name}` : 'Uusi ainesosa'}\n      </h2>\n      <Form onSubmit={submit}>\n        <Form.Group>\n          <Form.Label>\n            <strong>Nimi</strong>\n          </Form.Label>\n          <Form.Control {...name} />\n          <Form.Label>\n            <strong>Hinta (€)</strong>\n            <Button variant=\"light\" onClick={addPrice}>\n              lisää hinta\n            </Button>\n            <Button variant=\"light\" onClick={deletePrice}>\n              poista viimeisin hinta\n            </Button>\n          </Form.Label>\n          <div>\n            Hinnat: {prices.map(p => `${p.toFixed(2)} €, `)}\n            <Form.Control\n              bsPrefix={{ display: 'inline-block' }}\n              value={newPrice}\n              type=\"number\"\n              onChange={event => setNewPrice(event.target.value)}\n            />\n          </div>\n\n          <Form.Label>\n            <strong>Kappaletta</strong>\n          </Form.Label>\n          <Form.Control {...pieces} />\n          <Form.Label>\n            <strong>Brändi</strong>\n          </Form.Label>\n          <Form.Control {...brand} />\n          <Form.Label>\n            <strong>Paino (g)</strong>\n          </Form.Label>\n          <Form.Control {...weight} />\n          <Form.Label>\n            <strong>Rasvaa (g)</strong>\n          </Form.Label>\n          <Form.Control {...fat} />\n          <Form.Label>\n            <strong>joista tyydyttyneitä (g)</strong>\n          </Form.Label>\n          <Form.Control {...saturatedFat} />\n          <Form.Label>\n            <strong>Hiilarit (g)</strong>\n          </Form.Label>\n          <Form.Control {...carbs} />\n          <Form.Label>\n            <strong>joista sokereita (g)</strong>\n          </Form.Label>\n          <Form.Control {...sugars} />\n          <Form.Label>\n            <strong>Protskua (g)</strong>\n          </Form.Label>\n          <Form.Control {...protein} />\n          <Form.Label>\n            <strong>Suolaa (g)</strong>\n          </Form.Label>\n          <Form.Control {...salt} />\n          <br />\n          <Button type=\"submit\">\n            {update !== null ? 'Päivitä ainesosa' : 'Lisää ainesosa'}\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(IngredientForm)\n","/* eslint-disable no-nested-ternary */\nimport React from 'react'\nimport {\n  Form,\n  Button,\n  Dropdown,\n  DropdownButton,\n  Table,\n  ListGroup,\n} from 'react-bootstrap'\n\nconst FoodForm = ({\n  toggleUnit,\n  changeFoodIngredientValue,\n  recipe,\n  foodIngredients,\n  ingredients,\n  handleSelect,\n  removeFoodIngredient,\n  addStep,\n  removeStep,\n  submit,\n  step,\n  food,\n  name,\n}) => {\n  return (\n    <div>\n      <Form onSubmit={submit}>\n        <Form.Group>\n          <Button variant=\"success\" type=\"submit\">\n            {food ? 'päivitä' : 'lisää ruoka'}\n          </Button>\n          <br />\n          <br />\n          <Form.Label>Ruoan nimi</Form.Label>\n          <Form.Control {...name} />\n          <Form.Label>Resepti</Form.Label>\n          <Form.Control {...step} />\n          <Button onClick={addStep}>lisää reseptiin</Button>\n        </Form.Group>\n      </Form>\n      <ListGroup>\n        {recipe.map(row => (\n          <ListGroup.Item key={row.id}>\n            <li>\n              {row.value}\n              <Button variant=\"light\" id={row.id} onClick={removeStep}>\n                poista\n              </Button>\n            </li>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      <br />\n      <h6>AINESOSAT</h6>\n      <DropdownButton id=\"dropdown-basic-button\" title=\"Lisää ainesosa\">\n        {ingredients.map(i => (\n          <Dropdown.Item key={i.id} eventKey={i.id} onSelect={handleSelect}>\n            {i.name}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n      <Table>\n        <thead>\n          <tr>\n            <th>nimi</th>\n            <th>hintahaarukka (€)</th>\n            <th>määrä</th>\n            <th>yksikkö</th>\n          </tr>\n        </thead>\n        <tbody>\n          {foodIngredients.map(fi => (\n            <tr key={fi.id}>\n              <td>{fi.item.name}</td>\n              <td>\n                {fi.item.priceRange.min}€ - {fi.item.priceRange.max}€\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  id={fi.id}\n                  value={fi.value}\n                  onChange={event => changeFoodIngredientValue(event)}\n                  style={{ width: '80px' }}\n                />\n              </td>\n              <td>\n                {fi.onlyGrams === true ? (\n                  <Button disabled variant=\"dark\">\n                    grammaa\n                  </Button>\n                ) : fi.unit === 'pieces' ? (\n                  <Button variant=\"info\" id={fi.id} onClick={toggleUnit}>\n                    kappaletta\n                  </Button>\n                ) : (\n                  <Button variant=\"secondary\" id={fi.id} onClick={toggleUnit}>\n                    grammaa\n                  </Button>\n                )}\n              </td>\n              <td>\n                <Button\n                  variant=\"light\"\n                  id={fi.id}\n                  onClick={removeFoodIngredient}\n                >\n                  poista\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default FoodForm\n","import { useState } from 'react'\n\nconst unit = {\n  PIECES: 'pieces',\n  GRAMS: 'grams',\n}\n\nconst macroName = {\n  KCAL: 'kcal',\n  FAT: 'fat',\n  SATURATED_FAT: 'saturatedFat',\n  CARBS: 'carbs',\n  SUGARS: 'sugars',\n  PROTEIN: 'protein',\n  SALT: 'salt',\n}\n\nconst getMacroByUnit = (\n  macro,\n  ingredient,\n  foodIngredientValue,\n  foodIngredientUnit\n) => {\n  if (foodIngredientUnit === unit.PIECES) {\n    return ingredient[macro].inOnePiece * foodIngredientValue\n  }\n  return (ingredient[macro].in100g / 100) * foodIngredientValue\n}\n\nconst getMacroForFood = (food, macro) => {\n  return food.ingredients.reduce((macroSum, nextFoodIngr) => {\n    let foodIngredientUnit\n    let amount\n    if (nextFoodIngr.pieces !== null) {\n      foodIngredientUnit = unit.PIECES\n      amount = nextFoodIngr.pieces\n    } else {\n      foodIngredientUnit = unit.GRAMS\n      amount = nextFoodIngr.grams\n    }\n\n    return (\n      macroSum +\n      getMacroByUnit(macro, nextFoodIngr.item, amount, foodIngredientUnit)\n    )\n  }, 0)\n}\n\nconst useMacros = props => {\n  const food = props || null\n\n  const [kcal, setKcal] = useState(\n    food ? getMacroForFood(food, macroName.KCAL) : 0\n  )\n  const [fat, setFat] = useState(\n    food ? getMacroForFood(food, macroName.FAT) : 0\n  )\n  const [saturatedFat, setSaturatedFat] = useState(\n    food ? getMacroForFood(food, macroName.SATURATED_FAT) : 0\n  )\n  const [carbs, setCarbs] = useState(\n    food ? getMacroForFood(food, macroName.CARBS) : 0\n  )\n  const [sugars, setSugars] = useState(\n    food ? getMacroForFood(food, macroName.SUGARS) : 0\n  )\n  const [protein, setProtein] = useState(\n    food ? getMacroForFood(food, macroName.PROTEIN) : 0\n  )\n  const [salt, setSalt] = useState(\n    food ? getMacroForFood(food, macroName.SALT) : 0\n  )\n\n  const underZeroIsZero = num => {\n    return num < 0 ? 0 : num\n  }\n\n  const addTo = {\n    kcal: amount => setKcal(kcal + amount),\n    fat: amount => setFat(fat + amount),\n    saturatedFat: amount => setSaturatedFat(saturatedFat + amount),\n    carbs: amount => setCarbs(carbs + amount),\n    sugars: amount => setSugars(sugars + amount),\n    protein: amount => setProtein(protein + amount),\n    salt: amount => setSalt(salt + amount),\n  }\n\n  const subtractFrom = {\n    kcal: amount => setKcal(underZeroIsZero(kcal - amount)),\n    fat: amount => setFat(underZeroIsZero(fat - amount)),\n    saturatedFat: amount =>\n      setSaturatedFat(underZeroIsZero(saturatedFat - amount)),\n    carbs: amount => setCarbs(underZeroIsZero(carbs - amount)),\n    sugars: amount => setSugars(underZeroIsZero(sugars - amount)),\n    protein: amount => setProtein(underZeroIsZero(protein - amount)),\n    salt: amount => setSalt(underZeroIsZero(salt - amount)),\n  }\n\n  const macros = {\n    kcal: kcal.toFixed(1),\n    fat: fat.toFixed(1),\n    saturatedFat: saturatedFat.toFixed(1),\n    carbs: carbs.toFixed(1),\n    sugars: sugars.toFixed(1),\n    protein: protein.toFixed(1),\n    salt: salt.toFixed(1),\n    addAll: (ingredient, amount, foodIngredientUnit) => {\n      Object.keys(macroName).forEach(key => {\n        const amountToAdd = getMacroByUnit(\n          macroName[key],\n          ingredient,\n          amount,\n          foodIngredientUnit\n        )\n        addTo[macroName[key]](amountToAdd)\n      })\n    },\n    subtractAll: (ingredient, amount, foodIngredientUnit) => {\n      Object.keys(macroName).forEach(key => {\n        const amountToSubtract = getMacroByUnit(\n          macroName[key],\n          ingredient,\n          amount,\n          foodIngredientUnit\n        )\n        subtractFrom[macroName[key]](amountToSubtract)\n      })\n    },\n  }\n\n  return [macros]\n}\n\nexport default useMacros\n","import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { v4 as uuid } from 'uuid'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport useField from '../../hooks/useField'\nimport { ALL_INGREDIENTS } from '../../Ingredient/queries'\nimport FoodForm from '../presentational/FoodForm'\nimport useMacros from '../../hooks/useMacros'\n\nconst unit = {\n  PIECES: 'pieces',\n  GRAMS: 'grams',\n}\n\nconst getFoodIngredient = fi => {\n  return {\n    unit: fi.pieces ? unit.PIECES : unit.GRAMS,\n    onlyGrams: fi.pieces === null,\n    value: fi.pieces ? fi.pieces : fi.grams,\n    item: fi.item,\n    id: uuid(),\n  }\n}\n\n// eslint-disable-next-line no-shadow\nconst FoodFormContainer = ({ food, updateFood, addFood, setAlert }) => {\n  const [name] = useField('text', food ? food.name : null)\n  const [step, resetStep] = useField('text')\n  const [recipe, setRecipe] = useState([])\n  const [foodIngredients, setFoodIngredients] = useState(\n    food ? food.ingredients.map(fi => getFoodIngredient(fi)) : []\n  )\n  const [priceRange, setPriceRange] = useState(\n    food ? food.priceRange : { min: 0, max: 0 }\n  )\n  const [macros] = useMacros(food)\n\n  const ingredientsResult = useQuery(ALL_INGREDIENTS)\n\n  useEffect(() => {\n    if (food) {\n      const recipeRows = food.recipe.map(r => ({ value: r, id: uuid() }))\n      setRecipe(recipeRows)\n    }\n  }, [food])\n\n  if (ingredientsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const ingredients = ingredientsResult.data.allIngredients.filter(\n    i => !foodIngredients.map(fi => fi.item.id).includes(i.id)\n  )\n\n  const parseIngredients = () => {\n    return foodIngredients.map(fi => `${fi.item.id};${fi.unit};${fi.value}`)\n  }\n\n  const parseRecipe = () => {\n    return recipe.map(row => row.value)\n  }\n\n  const toggleUnit = event => {\n    const foodIngredient = foodIngredients.find(fi => fi.id === event.target.id)\n    const oldUnit = foodIngredient.unit\n    const newUnit =\n      foodIngredient.unit === unit.PIECES ? unit.GRAMS : unit.PIECES\n    foodIngredient.unit = newUnit\n\n    setFoodIngredients(\n      foodIngredients.map(fi =>\n        fi.id === event.target.id ? foodIngredient : fi\n      )\n    )\n\n    macros.subtractAll(foodIngredient.item, foodIngredient.value, oldUnit)\n    macros.addAll(foodIngredient.item, foodIngredient.value, newUnit)\n  }\n\n  const changeFoodIngredientValue = event => {\n    const foodIngredient = foodIngredients.find(fi => fi.id === event.target.id)\n    const changeInValue = Number(event.target.value) - foodIngredient.value\n\n    macros.addAll(foodIngredient.item, changeInValue, foodIngredient.unit)\n\n    setFoodIngredients(\n      foodIngredients.map(fi =>\n        fi.id === event.target.id\n          ? { ...fi, value: Number(event.target.value) }\n          : fi\n      )\n    )\n  }\n\n  const addFoodIngredient = ingredientID => {\n    const ingredient = ingredients.find(i => i.id === ingredientID)\n    const foodIngredientUnit = ingredient.pieces ? unit.PIECES : unit.GRAMS\n    const newFoodIngredient = {\n      unit: foodIngredientUnit,\n      onlyGrams: ingredient.pieces === null,\n      value: 0,\n      item: ingredient,\n      id: uuid(),\n    }\n\n    setFoodIngredients(foodIngredients.concat(newFoodIngredient))\n\n    setPriceRange({\n      min: priceRange.min + ingredient.priceRange.min,\n      max: priceRange.max + ingredient.priceRange.max,\n    })\n  }\n\n  const removeFoodIngredient = event => {\n    const foodIngredient = foodIngredients.find(fi => fi.id === event.target.id)\n    setFoodIngredients(\n      foodIngredients.filter(fi => fi.id !== foodIngredient.id)\n    )\n    const min = priceRange.min - foodIngredient.item.priceRange.min\n    const max = priceRange.max - foodIngredient.item.priceRange.max\n    setPriceRange({\n      min: min < 0 ? 0 : min,\n      max: max < 0 ? 0 : max,\n    })\n    macros.subtractAll(\n      foodIngredient.item,\n      foodIngredient.value,\n      foodIngredient.unit\n    )\n  }\n\n  const addStep = () => {\n    if (step.value.length < 3) {\n      setAlert(\n        'danger',\n        'Yhden reseptin rivin pituuden täytyy olla vähintään 3!'\n      )\n      return\n    }\n    if (recipe.map(r => r.value).includes(step.value)) {\n      setAlert('danger', 'Reseptissä ei voi olla samoja rivejä!')\n      return\n    }\n    setRecipe(recipe.concat({ value: step.value, id: uuid() }))\n    resetStep()\n  }\n\n  const removeStep = event => {\n    setRecipe(recipe.filter(row => row.id !== event.target.id))\n  }\n\n  const submit = async e => {\n    e.preventDefault()\n\n    if (name.value.length < 4) {\n      setAlert('danger', 'Nimen pituuden täytyy olla vähintään 4 !')\n      return\n    }\n\n    const foodForParent = {\n      name: name.value,\n      ingredients: parseIngredients(),\n      recipe: parseRecipe(),\n    }\n\n    if (food) {\n      updateFood(foodForParent)\n    } else {\n      addFood(foodForParent)\n    }\n  }\n\n  return (\n    <div>\n      <h2>{food ? `Päivitä ${food.name}` : 'Luo uusi ruoka'}</h2>\n      <strong>\n        <div>\n          Hintahaarukka: {priceRange.min.toFixed(2)} € -{' '}\n          {priceRange.max.toFixed(2)} €\n        </div>\n      </strong>\n      <br />\n      <div>\n        <div>Yhteensä energiaa: {macros.kcal} kcal</div>\n        <div>Yhteensä rasvaa: {macros.fat} g</div>\n        <div>- josta tyydyttynyttä: {macros.saturatedFat} g</div>\n        <div>Yhteensä hiilareita: {macros.carbs} g</div>\n        <div>- josta sokereita: {macros.sugars} g</div>\n        <div>Yhteensä protskua {macros.protein} g</div>\n        <div>Yhteensä suolaa: {macros.salt} g</div>\n      </div>\n      <br />\n      <FoodForm\n        changeFoodIngredientValue={changeFoodIngredientValue}\n        toggleUnit={toggleUnit}\n        foodIngredients={foodIngredients}\n        ingredients={ingredients}\n        recipe={recipe}\n        handleSelect={addFoodIngredient}\n        removeFoodIngredient={removeFoodIngredient}\n        addStep={addStep}\n        removeStep={removeStep}\n        submit={submit}\n        step={step}\n        food={food}\n        name={name}\n      />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(FoodFormContainer)\n","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { useRouteMatch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport { ALL_FOODS, UPDATE_FOOD } from '../queries'\nimport FoodFormContainer from './FoodFormContainer'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\nconst UpdateFood = ({ setAlert }) => {\n  const [alreadyUpdated, setAlreadyUpdated] = useState(false)\n  const [oldIngredients, setOldIngredients] = useState([])\n  const foodName = useRouteMatch('/ruoat/paivita/:name').params.name\n  const updateCacheWith = useUpdateCache('allFoods', ALL_FOODS, 'UPDATE')\n  const [launchUpdateFood] = useMutation(UPDATE_FOOD, {\n    update: (store, response) => {\n      updateCacheWith(response.data.updateFood, oldIngredients)\n    },\n  })\n\n  const foodsResult = useQuery(ALL_FOODS)\n\n  useEffect(() => {\n    if (!foodsResult.loading) {\n      const food = foodsResult.data.allFoods.find(f => f.name === foodName)\n      setOldIngredients(food.ingredients.map(i => i.item.id))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [foodsResult.loading])\n\n  if (foodsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const food = foodsResult.data.allFoods.find(f => f.name === foodName)\n\n  if (alreadyUpdated) {\n    return <Redirect to={`/ruoat/${food.name}`} />\n  }\n\n  const updateFood = async foodToUpdate => {\n    try {\n      setAlreadyUpdated(true)\n      await launchUpdateFood({\n        variables: {\n          id: food.id,\n          name: foodToUpdate.name,\n          ingredients: foodToUpdate.ingredients,\n          recipe: foodToUpdate.recipe,\n        },\n      })\n    } catch (e) {\n      console.log('Error updating food in UpdateFood.js', e.message)\n      setAlert('danger', 'Jotain meni vikaan. Kokeileppa uudestaan!')\n    }\n    setAlert('success', `Ruoka ${foodName} päivitetty`)\n  }\n\n  return (\n    <div>\n      <FoodFormContainer food={food} updateFood={updateFood} />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(UpdateFood)\n","import React from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport isEqual from 'lodash.isequal'\nimport { setAlert } from '../../redux/alertReducer'\nimport { ADD_FOOD, ALL_FOODS } from '../queries'\nimport FoodFormContainer from './FoodFormContainer'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\n// eslint-disable-next-line no-shadow\nconst NewFood = ({ setAlert }) => {\n  const history = useHistory()\n  const updateCacheWith = useUpdateCache('allFoods', ALL_FOODS, 'ADD')\n  const { loading, data } = useQuery(ALL_FOODS)\n  const [launchAddFood] = useMutation(ADD_FOOD, {\n    update: (store, response) => {\n      const addedFood = response.data.addFood\n      updateCacheWith(addedFood)\n      history.push(`/ruoat/${addedFood.name}`)\n    },\n  })\n\n  if (loading) {\n    return <div>...loading</div>\n  }\n  const foods = data.allFoods\n  const foodNames = foods.map(f => f.name)\n\n  const addFood = async foodToAdd => {\n    if (foodNames.includes(foodToAdd.name)) {\n      setAlert(\n        'danger',\n        `Ruoka \"${foodToAdd.name}\" on jo olemassa, valitse toinen nimi`\n      )\n      return\n    }\n    if (foodToAdd.ingredients.length === 0) {\n      setAlert(\n        'danger',\n        'Ruoassa täytyy olla ainesosia. Muuten tulee aika mitäänsanomaton safka.'\n      )\n      return\n    }\n    const newFoodsIngredients = foodToAdd.ingredients.map(i =>\n      i.substring(0, i.length - 2)\n    )\n    for (let i = 0; i < foods.length; i++) {\n      const existingFoodsIngredients = foods[i].ingredients.map(\n        ingr => ingr.item.id\n      )\n      if (isEqual(existingFoodsIngredients, newFoodsIngredients)) {\n        setAlert(\n          'danger',\n          `Ruoassa \"${foods[i].name}\" on jo täysin samat ainesosat.`\n        )\n        return\n      }\n    }\n    try {\n      await launchAddFood({\n        variables: {\n          name: foodToAdd.name,\n          ingredients: foodToAdd.ingredients,\n          recipe: foodToAdd.recipe,\n        },\n      })\n      setAlert('success', `Uusi ruoka ${foodToAdd.name} lisätty`)\n    } catch (e) {\n      console.log('Error adding food in NewFood.js: ', e.message)\n      setAlert('danger', 'Jotain meni mönkään. Kokeile uudemman kerran.')\n    }\n  }\n\n  return (\n    <div>\n      <FoodFormContainer addFood={addFood} />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(NewFood)\n","import React from 'react'\nimport { Form, Button, Dropdown, DropdownButton, Table } from 'react-bootstrap'\n\nconst FoodPackForm = ({\n  submit,\n  name,\n  foodsForDropdown,\n  foods,\n  handleSelect,\n  removeFood,\n  foodPack,\n}) => (\n  <div>\n    <Form onSubmit={submit}>\n      <Form.Group>\n        <Button type=\"submit\">\n          {foodPack ? 'Päivitä' : 'Lisää ruokapaketti'}\n        </Button>\n        <br />\n        <br />\n        <Form.Label>Ruokapaketin nimi</Form.Label>\n        <Form.Control {...name} />\n      </Form.Group>\n    </Form>\n    <DropdownButton\n      id=\"dropdown-basic-button\"\n      title=\"Lisää ruoka\"\n      flip=\"offset\"\n      preventoverflow=\"padding\"\n    >\n      {foodsForDropdown.map(f => (\n        <Dropdown.Item key={f.id} eventKey={f.id} onSelect={handleSelect}>\n          {f.name}\n        </Dropdown.Item>\n      ))}\n    </DropdownButton>\n    <Table>\n      <thead>\n        <tr>\n          <th>\n            <h6>RUOAT</h6>\n          </th>\n          <th>nimi</th>\n          <th>hinta</th>\n          <th>kcal</th>\n          <th>ainesosat</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {foods.map(f => (\n          <tr key={f.id}>\n            <td></td>\n            <td>{f.name}</td>\n            <td>{f.price}</td>\n            <td>{f.kcal}</td>\n            <td>\n              <DropdownButton\n                id=\"dropdown-basic-button\"\n                title=\"Näytä\"\n                flip=\"offset\"\n                preventoverflow=\"padding\"\n              >\n                {f.ingredients\n                  .map(i => i.item)\n                  .map(i => (\n                    <Dropdown.Item key={i.id}>{i.name}</Dropdown.Item>\n                  ))}\n              </DropdownButton>\n            </td>\n            <td>\n              <Button variant=\"light\" id={f.id} onClick={removeFood}>\n                poista\n              </Button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  </div>\n)\n\nexport default FoodPackForm\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport useField from '../../hooks/useField'\nimport { ALL_FOODS } from '../../Food/queries'\nimport FoodPackForm from '../presentational/FoodPackForm'\n\nconst FoodPackFormContainer = ({\n  foodPack,\n  addFoodPack,\n  updateFoodPack,\n  // eslint-disable-next-line no-shadow\n  setAlert,\n}) => {\n  const [name] = useField('text', foodPack ? foodPack.name : null)\n  const [foods, setFoods] = useState(foodPack ? foodPack.foods : [])\n  const [price, setPrice] = useState(foodPack ? foodPack.price : 0)\n  const [kcal, setKcal] = useState(foodPack ? foodPack.kcal : 0)\n\n  const foodsResult = useQuery(ALL_FOODS)\n\n  if (foodsResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const foodsForDropdown = foodsResult.data.allFoods.filter(\n    ffd => !foods.map(f => f.id).includes(ffd.id)\n  )\n\n  const handleSelect = foodId => {\n    const food = foodsForDropdown.find(f => f.id === foodId)\n\n    setFoods(foods.concat(food))\n\n    setPrice(price + food.price)\n    setKcal(kcal + food.kcal)\n  }\n\n  const submit = async e => {\n    e.preventDefault()\n\n    if (name.value.length < 4) {\n      setAlert('danger', 'Nimen pituuden täytyy olla vähintään 4 !')\n      return\n    }\n\n    const foodPackForParent = {\n      name: name.value,\n      foods: foods.map(f => f.id),\n    }\n\n    if (foodPack) {\n      updateFoodPack(foodPackForParent)\n    } else {\n      addFoodPack(foodPackForParent)\n    }\n  }\n\n  const removeFood = event => {\n    const food = foods.find(f => f.id === event.target.id)\n    setFoods(foods.filter(f => f.id !== event.target.id))\n\n    setPrice(price - food.price)\n    setKcal(kcal - food.kcal)\n  }\n\n  return (\n    <div>\n      <h2>{foodPack ? `Päivitä ${foodPack.name}` : 'Luo uusi ruokapaketti'}</h2>\n      <strong>\n        <p>Yhteishinta: {price.toFixed(2)} €</p>\n      </strong>\n      <strong>\n        <p>Yhteensä kcal: {kcal}</p>\n      </strong>\n      <FoodPackForm\n        submit={submit}\n        name={name}\n        foodsForDropdown={foodsForDropdown}\n        foods={foods}\n        handleSelect={handleSelect}\n        removeFood={removeFood}\n        foodPack={foodPack}\n      />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(FoodPackFormContainer)\n","import React from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport isEqual from 'lodash.isequal'\nimport { setAlert } from '../../redux/alertReducer'\nimport { ADD_FOODPACK, ALL_FOODPACKS } from '../queries'\nimport FoodPackFormContainer from './FoodPackFormContainer'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\n// eslint-disable-next-line no-shadow\nconst NewFoodPack = ({ setAlert }) => {\n  const history = useHistory()\n  const updateCacheWith = useUpdateCache('allFoodPacks', ALL_FOODPACKS, 'ADD')\n  const { loading, data } = useQuery(ALL_FOODPACKS)\n  const [launchAddFoodPack] = useMutation(ADD_FOODPACK, {\n    update: (store, response) => {\n      const addedFoodPack = response.data.addFoodPack\n      updateCacheWith(addedFoodPack)\n      history.push(`/ruokapaketit/${addedFoodPack.name}`)\n    },\n  })\n\n  if (loading) {\n    return <div>...loading</div>\n  }\n  const foodPacks = data.allFoodPacks\n  const foodPackNames = foodPacks.map(fp => fp.name)\n\n  const addFoodPack = async foodPackToAdd => {\n    if (foodPackNames.includes(foodPackToAdd.name)) {\n      setAlert(\n        'danger',\n        `Ruokapaketti \"${foodPackToAdd.name}\" löytyy jo, valitse toinen nimi`\n      )\n      return\n    }\n    if (foodPackToAdd.foods.length === 0) {\n      setAlert(\n        'danger',\n        'Ruokapaketissa täytyy olla ruokia. Eihän siinä muuten olisi mitään järkeä.'\n      )\n      return\n    }\n    for (let i = 0; i < foodPacks.length; i++) {\n      const foods = foodPacks[i].foods.map(f => f.id)\n      if (isEqual(foods, foodPackToAdd.foods)) {\n        setAlert(\n          'danger',\n          `Ruokapaketissa \"${foodPacks[i].name}\" on jo tismalleen samat ruoat`\n        )\n        return\n      }\n    }\n    try {\n      await launchAddFoodPack({\n        variables: {\n          name: foodPackToAdd.name,\n          foods: foodPackToAdd.foods,\n        },\n      })\n      setAlert('success', `Ruokapaketti ${foodPackToAdd.name} lisätty!`)\n    } catch (e) {\n      console.log('Error adding foodpack in NewFoodPack.js: ', e.message)\n      setAlert('danger', 'Jotain meni vikaan. Yritä uudelleen!')\n    }\n  }\n\n  return (\n    <div>\n      <FoodPackFormContainer addFoodPack={addFoodPack} />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(NewFoodPack)\n","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { useRouteMatch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/alertReducer'\nimport { ALL_FOODPACKS, UPDATE_FOODPACK } from '../queries'\nimport FoodPackFormContainer from './FoodPackFormContainer'\nimport useUpdateCache from '../../hooks/useUpdateCache'\n\n// eslint-disable-next-line no-shadow\nconst UpdateFoodPack = ({ setAlert }) => {\n  const [alreadyUpdated, setAlreadyUpdated] = useState(false)\n  const [oldFoods, setOldFoods] = useState([])\n  const foodPackName = useRouteMatch('/ruokapaketit/paivita/:name').params.name\n  const updateCacheWith = useUpdateCache(\n    'allFoodPacks',\n    ALL_FOODPACKS,\n    'UPDATE'\n  )\n  const [launchUpdateFoodPack] = useMutation(UPDATE_FOODPACK, {\n    update: (store, response) => {\n      updateCacheWith(response.data.updateFoodPack, oldFoods)\n    },\n  })\n\n  const foodPacksResult = useQuery(ALL_FOODPACKS)\n\n  useEffect(() => {\n    const foodPack = foodPacksResult.data.allFoodPacks.find(\n      fp => fp.name === foodPackName\n    )\n    if (!foodPacksResult.loading) {\n      setOldFoods(foodPack.foods.map(f => f.id))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [foodPacksResult.loading])\n\n  if (foodPacksResult.loading) {\n    return <div>...loading</div>\n  }\n\n  const foodPack = foodPacksResult.data.allFoodPacks.find(\n    fp => fp.name === foodPackName\n  )\n\n  if (alreadyUpdated) {\n    return <Redirect to={`/ruokapaketit/${foodPack.name}`} />\n  }\n\n  const updateFoodPack = async foodPackToUpdate => {\n    try {\n      setAlreadyUpdated(true)\n      await launchUpdateFoodPack({\n        variables: {\n          id: foodPack.id,\n          name: foodPackToUpdate.name,\n          foods: foodPackToUpdate.foods,\n        },\n      })\n    } catch (e) {\n      setAlreadyUpdated(false)\n      console.log('Error updating foodPack in UpdateFoodPack.js: ', e.message)\n      setAlert('danger', 'Jotain meni vikaan. Yritä uudelleen!')\n    }\n    setAlert('success', `Ruokapaketti ${foodPack.name} päivitetty!`)\n  }\n\n  return (\n    <div>\n      <FoodPackFormContainer\n        foodPack={foodPack}\n        updateFoodPack={updateFoodPack}\n      />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(UpdateFoodPack)\n","import React, { useState, useRef } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Overlay from 'react-bootstrap/Overlay'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport Cookie from 'js-cookie'\nimport useUpdateStore from '../hooks/useUpdateStore'\n\nconst ClearShopListButton = () => {\n  const [showModal, setShowModal] = useState(false)\n  const [showOverLay, setShowOverlay] = useState(false)\n  const emptyStore = useUpdateStore('EMPTY')\n  const target = useRef(null)\n\n  const handleButtonClick = () => {\n    if (Cookie.get('currentShopList')) {\n      setShowOverlay(true)\n      setTimeout(() => {\n        setShowOverlay(false)\n      }, 3000)\n    } else {\n      setShowModal(true)\n    }\n    return\n  }\n\n  const handleModalClick = () => {\n    setShowModal(false)\n    emptyStore()\n  }\n\n  return (\n    <div style={{ display: 'inline-block', paddingLeft: '3vw' }}>\n      <Button variant=\"danger\" ref={target} onClick={handleButtonClick}>\n        Tyhjää ostoslista\n      </Button>\n      <Overlay target={target.current} show={showOverLay} placement=\"right\">\n        <Tooltip>Ostoslista on jo tyhjä!</Tooltip>\n      </Overlay>\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <strong>HUOM!</strong>\n        </Modal.Header>\n        <Modal.Body>\n          Tätä toimintoa ei voi peruttaa. Katkera setti jos menee hyvä\n          ostoslista hukkaan.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => setShowModal(false)}>\n            Peruuta\n          </Button>\n          <Button variant=\"danger\" onClick={handleModalClick}>\n            Tyhjää silti\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ClearShopListButton\n","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Button from 'react-bootstrap/Button'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport ShopListButton from '../../ShopList/ShopListButton'\n\nconst StyledItem = styled(ListGroup.Item)`\n  background: #ff99cc;\n`\n\nconst ShopListCard = ({ ingredient, buttons }) => {\n  const history = useHistory()\n  return (\n    <div>\n      <ListGroup horizontal style={{ margin: '0.1rem' }}>\n        <StyledItem>{ingredient.name}</StyledItem>\n        {/* eslint-disable-next-line no-irregular-whitespace */}\n        <StyledItem>\n          {ingredient.priceRange.min.toFixed(2)} € -{' '}\n          {ingredient.priceRange.max.toFixed(2)} €\n        </StyledItem>\n        {ingredient.multiplier > 1 && (\n          <StyledItem>\n            <h2>\n              <strong>x{ingredient.multiplier}</strong>\n            </h2>\n          </StyledItem>\n        )}\n        {buttons && (\n          <StyledItem>\n            <Button\n              variant=\"primary\"\n              onClick={() => history.push(`/ainesosat/${ingredient.name}`)}\n            >\n              Näytä\n            </Button>\n          </StyledItem>\n        )}\n        {buttons && (\n          <StyledItem>\n            <ShopListButton\n              mode=\"REMOVE\"\n              object={ingredient}\n              set=\"ingredients\"\n              key={`${ingredient.id}_button`}\n            />\n          </StyledItem>\n        )}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default ShopListCard\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport IngredientCard from '../../Ingredient/presentational/ShopListCard'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport '../../css/contentCard.css'\n\nconst StyledHeader = styled(Card.Header)`\n  display: inline-block;\n`\n\nconst StyledShopListButton = styled(ShopListButton)`\n  display: inline-block;\n`\n\nconst StyledButton = styled(Button)`\n  display: inline-block;\n`\n\nconst ShopListCard = ({ food, buttons }) => {\n  const history = useHistory()\n  return (\n    <div>\n      <Card className=\"foodCard\">\n        <StyledHeader>\n          Ruoka\n          {buttons && (\n            <div style={{ display: 'inline-block' }}>\n              <StyledButton\n                variant=\"primary\"\n                onClick={() => history.push(`/ruoat/${food.name}`)}\n              >\n                Näytä\n              </StyledButton>\n              <StyledShopListButton\n                mode=\"REMOVE\"\n                object={food}\n                set=\"foods\"\n                key={`${food.id}_button`}\n              />\n            </div>\n          )}\n        </StyledHeader>\n        <Card.Body>\n          <Card.Title>\n            {food.name}{' '}\n            {food.multiplier > 1 && (\n              <h2>\n                <strong>x{food.multiplier}</strong>\n              </h2>\n            )}\n          </Card.Title>\n          {food.ingredients.map(i => (\n            <IngredientCard ingredient={i.item} key={i.id} />\n          ))}\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\nexport default ShopListCard\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from 'react-router-dom'\nimport FoodCard from '../../Food/presentational/ShopListCard'\nimport ShopListButton from '../../ShopList/ShopListButton'\nimport '../../css/contentCard.css'\n\nconst ShopListCard = ({ foodPack, buttons }) => {\n  const history = useHistory()\n  return (\n    <div>\n      <Card className=\"foodPackCard\">\n        <Card.Header>\n          Ruokapaketti\n          {buttons && (\n            <div>\n              <Button\n                variant=\"primary\"\n                onClick={() => history.push(`/ruokapaketit/${foodPack.name}`)}\n              >\n                Näytä\n              </Button>\n              <ShopListButton\n                mode=\"REMOVE\"\n                object={foodPack}\n                set=\"foodPacks\"\n                key={`${foodPack.id}_button`}\n              />\n            </div>\n          )}\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {foodPack.name}{' '}\n            {foodPack.multiplier > 1 && (\n              <h2>\n                <strong>x{foodPack.multiplier}</strong>\n              </h2>\n            )}\n          </Card.Title>\n          {foodPack.foods.map(f => (\n            <FoodCard food={f} key={f.id} />\n          ))}\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\nexport default ShopListCard\n","import React from 'react'\nimport IngredientCard from '../../Ingredient/presentational/ShopListCard'\nimport FoodCard from '../../Food/presentational/ShopListCard'\nimport FoodPackCard from '../../FoodPack/presentational/ShopListCard'\n\nconst Overview = ({ ingredients, foods, foodPacks }) => {\n  return (\n    <div>\n      <h3>Valitut Ruokapaketit</h3>\n      {foodPacks.length === 0 && <div>Ei valittuja ruokapaketteja</div>}\n      {foodPacks.map(fp => (\n        <FoodPackCard foodPack={fp} key={fp.id} buttons />\n      ))}\n      <h3>Valitut Ruoat</h3>\n      {foods.length === 0 && <div>Ei valittuja ruokia</div>}\n      {foods.map(f => (\n        <FoodCard food={f} key={f.id} buttons />\n      ))}\n      <h3>Valitut Ainesosat</h3>\n      {ingredients.length === 0 && <div>Ei valittuja ainesosia</div>}\n      {ingredients.map(i => (\n        <IngredientCard ingredient={i} key={i.id} buttons />\n      ))}\n    </div>\n  )\n}\n\nexport default Overview\n","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nconst ShopList = ({ shopList }) => {\n  if (shopList.length === 0) {\n    return <h4>Ostoslista on tyhjä!</h4>\n  }\n  return (\n    <ListGroup variant=\"flush\">\n      {shopList.map(i => (\n        <ListGroup.Item key={i.id}>\n          {i.name} / {i.priceRange.min.toFixed(2)} € -{' '}\n          {i.priceRange.max.toFixed(2)} € /<strong> x{i.multiplier}</strong>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}\n\nexport default ShopList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from '@apollo/client'\nimport Card from 'react-bootstrap/Card'\nimport Nav from 'react-bootstrap/Nav'\nimport { ALL_INGREDIENTS } from '../../Ingredient/queries'\nimport { ALL_FOODS } from '../../Food/queries'\nimport { ALL_FOODPACKS } from '../../FoodPack/queries'\nimport EmptyShopListButton from '../EmptyShopListButton'\nimport Overview from '../presentational/Overview'\nimport ShopList from '../presentational/ShopList'\n\nconst ShopListContainer = props => {\n  const [showView, setShowView] = useState('overview')\n  const ingredientsResult = useQuery(ALL_INGREDIENTS)\n  const foodsResult = useQuery(ALL_FOODS)\n  const foodPacksResult = useQuery(ALL_FOODPACKS)\n\n  if (\n    ingredientsResult.loading ||\n    foodsResult.loading ||\n    foodPacksResult.loading\n  ) {\n    return <div>...loading</div>\n  }\n\n  const foodPacks = props.foodPacks.map(fp => {\n    const result = foodPacksResult.data.allFoodPacks.find(\n      foodPack => foodPack.id === fp.id\n    )\n    return { ...result, multiplier: fp.count }\n  })\n\n  const foods = props.foods.map(f => {\n    const result = foodsResult.data.allFoods.find(food => food.id === f.id)\n    return { ...result, multiplier: f.count }\n  })\n\n  const ingredients = props.ingredients.map(i => {\n    const result = ingredientsResult.data.allIngredients.find(\n      ingr => ingr.id === i.id\n    )\n    return { ...result, multiplier: i.count }\n  })\n\n  const shopListArray = props.shopListIds.map(slid => {\n    const result = ingredientsResult.data.allIngredients.find(\n      ingr => ingr.id === slid.id\n    )\n    return { ...result, multiplier: slid.count }\n  })\n\n  shopListArray.sort((a, b) => {\n    const nameA = a.name.toLowerCase()\n    const nameB = b.name.toLowerCase()\n    if (nameA < nameB) {\n      return -1\n    }\n    if (nameA > nameB) {\n      return 1\n    }\n    return 0\n  })\n\n  return (\n    <Card>\n      <Card.Header>\n        <h2>\n          Ostoslista\n          <EmptyShopListButton />\n        </h2>\n        <Nav variant=\"tabs\" defaultActiveKey=\"#yleisnäkymä\">\n          <Nav.Item>\n            <Nav.Link\n              href=\"#yleisnäkymä\"\n              onSelect={() => setShowView('overview')}\n            >\n              Yleisnäkymä\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"#lista\" onSelect={() => setShowView('shoplist')}>\n              Lista\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Card.Header>\n      <Card.Body>\n        {showView === 'overview' && (\n          <Overview\n            foodPacks={foodPacks}\n            foods={foods}\n            ingredients={ingredients}\n          />\n        )}\n        {showView === 'shoplist' && <ShopList shopList={shopListArray} />}\n      </Card.Body>\n    </Card>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    foodPacks: state.shopList.foodPacks,\n    foods: state.shopList.foods,\n    ingredients: state.shopList.ingredients,\n    shopListIds: state.shopList.shopListIds,\n  }\n}\n\nexport default connect(mapStateToProps)(ShopListContainer)\n","import React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport useUpdateCache from '../../hooks/useUpdateCache'\nimport IngredientForm from '../Forms/IngredientForm'\nimport { ALL_INGREDIENTS, UPDATE_INGREDIENT } from '../queries'\nimport { setAlert } from '../../redux/alertReducer'\n\n// eslint-disable-next-line no-shadow\nconst UpdateIngredient = ({ setAlert }) => {\n  const history = useHistory()\n  const ingredientName = useRouteMatch('/ainesosat/paivita/:name').params.name\n  const updateCacheWith = useUpdateCache(\n    'allIngredients',\n    ALL_INGREDIENTS,\n    'UPDATE'\n  )\n  const [launchUpdateIngredient] = useMutation(UPDATE_INGREDIENT, {\n    update: (store, response) => {\n      updateCacheWith(response.data.updateIngredient)\n      history.push(`/ainesosat/${ingredientName}`)\n    },\n  })\n\n  const { data, loading } = useQuery(ALL_INGREDIENTS)\n\n  if (loading === true) {\n    return <div>...loading</div>\n  }\n\n  const ingredient = data.allIngredients.find(i => i.name === ingredientName)\n\n  const updateIngredient = async ingredientToUpdate => {\n    try {\n      const {\n        name,\n        prices,\n        brand,\n        pieces,\n        weight,\n        kcal,\n        fat,\n        saturatedFat,\n        carbs,\n        sugars,\n        protein,\n        salt,\n      } = ingredientToUpdate\n      await launchUpdateIngredient({\n        variables: {\n          id: ingredient.id,\n          ...(name && { name }),\n          ...(prices && { prices }),\n          ...(brand && { brand }),\n          ...(pieces && { pieces }),\n          ...(weight && { weight }),\n          ...(kcal && { kcal }),\n          ...(fat && { fat }),\n          ...(saturatedFat && { saturatedFat }),\n          ...(carbs && { carbs }),\n          ...(sugars && { sugars }),\n          ...(protein && { protein }),\n          ...(salt && { salt }),\n        },\n      })\n      setAlert('success', `Ainesosa ${ingredientName} päivitetty!`)\n    } catch (e) {\n      console.log(\n        'Error updating ingredient in UpdateIngredient.js: ',\n        e.message\n      )\n      setAlert('danger', `Hmm... yritäppä uudemman kerran. Jotain on vialla.`)\n    }\n  }\n\n  return (\n    <div>\n      <IngredientForm ingredient={ingredient} update={updateIngredient} />\n    </div>\n  )\n}\n\nexport default connect(null, { setAlert })(UpdateIngredient)\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Description from './Description'\nimport ListFoodsContainer from '../../Food/containers/ListFoodsContainer'\nimport ListIngredientsContainer from '../../Ingredient/containers/ListIngredientsContainer'\nimport IngredientContainer from '../../Ingredient/containers/IngredientContainer'\nimport FoodContainer from '../../Food/containers/FoodContainer'\nimport ListFoodPacksContainer from '../../FoodPack/containers/ListFoodPacksContainer'\nimport FoodPackContainer from '../../FoodPack/containers/FoodPackContainer'\nimport IngredientForm from '../../Ingredient/Forms/IngredientForm'\nimport UpdateFood from '../../Food/containers/UpdateFood'\nimport NewFood from '../../Food/containers/NewFood'\nimport NewFoodPack from '../../FoodPack/containers/NewFoodPack'\nimport UpdateFoodPack from '../../FoodPack/containers/UpdateFoodPack'\nimport ShopListContainer from '../../ShopList/containers/ShopListContainer'\nimport UpdateIngredient from '../../Ingredient/containers/UpdateIngredient'\n\nconst Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/ostoslista\">\n          <ShopListContainer />\n        </Route>\n        <Route path=\"/ruokapaketit/paivita/:name\">\n          <UpdateFoodPack />\n        </Route>\n        <Route path=\"/ruokapaketit/uusi\">\n          <NewFoodPack />\n        </Route>\n        <Route path=\"/ruokapaketit/:name\">\n          <FoodPackContainer />\n        </Route>\n        <Route path=\"/ruokapaketit\">\n          <ListFoodPacksContainer />\n        </Route>\n        <Route path=\"/ruoat/paivita/:name\">\n          <UpdateFood />\n        </Route>\n        <Route path=\"/ruoat/uusi\">\n          <NewFood />\n        </Route>\n        <Route path=\"/ruoat/:name\">\n          <FoodContainer />\n        </Route>\n        <Route path=\"/ruoat\">\n          <ListFoodsContainer />\n        </Route>\n        <Route path=\"/ainesosat/paivita/:name\">\n          <UpdateIngredient />\n        </Route>\n        <Route path=\"/ainesosat/uusi\">\n          <IngredientForm />\n        </Route>\n        <Route path=\"/ainesosat/:name\">\n          <IngredientContainer />\n        </Route>\n        <Route path=\"/ainesosat\">\n          <ListIngredientsContainer />\n        </Route>\n        <Route exact path=\"/\">\n          <Description />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default Routes\n","import React, { useState } from 'react'\nimport Toast from 'react-bootstrap/Toast'\nimport { connect } from 'react-redux'\nimport '../css/globalAlert.css'\n\nconst GlobalAlert = ({ toasts }) => {\n  const [closedToasts, setClosedToasts] = useState([])\n\n  if (toasts.length === 0) {\n    return null\n  }\n\n  const closeToast = id => {\n    setClosedToasts(closedToasts.concat(id))\n  }\n\n  const toastsToShow = toasts.filter(t => !closedToasts.includes(t.id))\n\n  if (toastsToShow.length > 0) {\n    return (\n      <div>\n        <div aria-live=\"polite\" aria-atomic=\"true\" className=\"toast-container\">\n          {toastsToShow.map(t => (\n            <div key={t.id}>\n              <Toast className=\"toast-box\" onClose={() => closeToast(t.id)}>\n                <Toast.Header>\n                  <strong className=\"mr-auto\">{t.header}</strong>\n                </Toast.Header>\n                <Toast.Body>{t.body}</Toast.Body>\n              </Toast>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  return null\n}\n\nconst mapStateToProps = state => {\n  return {\n    toasts: state.alerts,\n  }\n}\n\nexport default connect(mapStateToProps)(GlobalAlert)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../../css/SideDrawer.css'\n\nconst SideDrawer = ({ show }) => {\n  let drawerClasses = 'side_drawer'\n  if (show) {\n    drawerClasses = 'side_drawer open'\n  }\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <ul>\n          <li>\n            <Link to=\"/ruokapaketit\">Ruokapaketit</Link>\n          </li>\n          <li>\n            <Link to=\"/ruoat\">Ruoat</Link>\n          </li>\n          <li>\n            <Link to=\"/ainesosat\">Ainesosat</Link>\n          </li>\n        </ul>\n      </ul>\n    </nav>\n  )\n}\n\nexport default SideDrawer\n","import React from 'react'\nimport '../../css/BackDrop.css'\n\nconst BackDrop = ({ backDropClickHandler }) => (\n  <div\n    className=\"back_drop\"\n    onClick={backDropClickHandler}\n    onKeyDown={backDropClickHandler}\n    role=\"button\"\n    aria-label=\"Close side drawer\"\n    tabIndex=\"0\"\n  />\n)\n\nexport default BackDrop\n","import React, { useState } from 'react'\nimport './App.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport useEpicSubscription from './hooks/useEpicSubscription'\nimport Toolbar from './Menu/presentational/Toolbar'\nimport Routes from './Menu/presentational/Routes'\nimport { ALL_INGREDIENTS } from './Ingredient/queries'\nimport { ALL_FOODS } from './Food/queries'\nimport { ALL_FOODPACKS } from './FoodPack/queries'\nimport GlobalAlert from './general/GlobalAlert'\nimport SideDrawer from './Menu/presentational/SideDrawer'\nimport useUpdateStore from './hooks/useUpdateStore'\nimport BackDrop from './Menu/presentational/BackDrop'\n\nconst App = () => {\n  const ingredients = useQuery(ALL_INGREDIENTS)\n  const foods = useQuery(ALL_FOODS)\n  const foodPacks = useQuery(ALL_FOODPACKS)\n  const [sideDrawerOpen, setSideDrawerOpen] = useState(false)\n\n  useUpdateStore('INITSHOPLIST')\n\n  useEpicSubscription()\n\n  if (ingredients.loading || foods.loading || foodPacks.loading) {\n    return <div>...loading</div>\n  }\n\n  const drawerToggleClickHandler = () => {\n    setSideDrawerOpen(!sideDrawerOpen)\n  }\n\n  const backDropClickHandler = () => {\n    setSideDrawerOpen(false)\n  }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <Toolbar drawerClickHandler={drawerToggleClickHandler} />\n        <SideDrawer show={sideDrawerOpen} />\n        {sideDrawerOpen && (\n          <BackDrop backDropClickHandler={backDropClickHandler} />\n        )}\n        <main>\n          <Routes />\n          <GlobalAlert />\n        </main>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n  ApolloProvider,\n  split,\n} from '@apollo/client'\n// import { setContext } from 'apollo-link-context'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/link-ws'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport App from './App'\n\nconst httpLink = new HttpLink({\n  uri: '/graphql',\n})\n\nconst WS_LINK =\n  process.env.NODE_ENV === 'production'\n    ? 'ws://goshopvege.herokuapp.com/graphql'\n    : 'ws://localhost:4000/graphql'\n\nconst wsLink = new WebSocketLink({\n  uri: WS_LINK,\n  options: {\n    reconnect: true,\n  },\n})\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    )\n  },\n  wsLink,\n  httpLink\n)\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink,\n  connectToDevTools: true,\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </Provider>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root')\n)\n"],"sourceRoot":""}